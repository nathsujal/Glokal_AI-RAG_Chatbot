{"ast":null,"code":"var _jsxFileName = \"/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _sessions$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [regeneratingIndex, setRegeneratingIndex] = useState(null);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // To load uploaded files when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchUploadedFiles(sessionId);\n    }\n  }, [sessionId]);\n  const scrollToBottom = () => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      // Refresh sessions list after creating new session\n      setTimeout(fetchSessions, 500);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Check if files have been uploaded for this session\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages([...messages, userMessage, {\n          text: data.error,\n          sender: 'bot',\n          isError: true\n        }]);\n      } else if (data.response) {\n        // Now storing the response as is, without pre-processing\n        setMessages([...messages, userMessage, {\n          text: data.response,\n          sender: 'bot'\n        }]);\n        // Refresh sessions to update titles if this was the first message\n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, {\n        text: 'An error occurred. Please try again later.',\n        sender: 'bot',\n        isError: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // To refresh the uploaded files list\n  const handleUploadFiles = async e => {\n    e.preventDefault();\n    if (selectedFiles.length === 0) return;\n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFiles([...files, ...selectedFiles]);\n        setSelectedFiles([]);\n        // Refresh uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, {\n          text: `Successfully uploaded ${selectedFiles.length} file(s).`,\n          sender: 'system'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, {\n        text: 'Failed to upload files. Please try again.',\n        sender: 'system',\n        isError: true\n      }]);\n    }\n  };\n  const fetchChatHistory = async sessId => {\n    try {\n      setIsLoading(true);\n      console.log(`Fetching chat history for session: ${sessId}`);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      console.log('Chat history response:', data);\n      if (data.history && data.history.length > 0) {\n        // Convert the API response to our message format\n        const formattedMessages = [];\n        for (let i = 0; i < data.history.length; i += 2) {\n          // User message\n          if (data.history[i] && data.history[i].content && data.history[i].type === 'HumanMessage') {\n            formattedMessages.push({\n              text: data.history[i].content,\n              sender: 'user'\n            });\n          }\n          // Bot message\n          if (data.history[i + 1] && data.history[i + 1].content && data.history[i + 1].type === 'AIMessage') {\n            formattedMessages.push({\n              text: data.history[i + 1].content,\n              sender: 'bot'\n            });\n          }\n        }\n        console.log('Formatted messages:', formattedMessages);\n        setMessages(formattedMessages);\n      } else {\n        console.log('No chat history found');\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFileSelect = e => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n  const switchSession = session => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n    fetchUploadedFiles(session.session_id);\n  };\n\n  // Fetch uploaded files in each session to show them up later\n  const fetchUploadedFiles = async sessId => {\n    try {\n      const response = await fetch(`${API_URL}/uploaded_files?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.files) {\n        setUploadedFiles(data.files);\n      } else {\n        setUploadedFiles([]);\n      }\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n      setUploadedFiles([]);\n    }\n  };\n\n  // Delete Uploaded Files\n  const handleDeleteFile = async fileName => {\n    if (!window.confirm(`Are you sure you want to delete \"${fileName}\"?`)) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/delete_file`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          filename: fileName\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Refresh the uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, {\n          text: `Successfully deleted \"${fileName}\".`,\n          sender: 'system'\n        }]);\n      } else {\n        setMessages([...messages, {\n          text: `Failed to delete \"${fileName}\". ${data.error || ''}`,\n          sender: 'system',\n          isError: true\n        }]);\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setMessages([...messages, {\n        text: `Failed to delete \"${fileName}\". Please try again.`,\n        sender: 'system',\n        isError: true\n      }]);\n    }\n  };\n\n  // Edit the chat name (or session name)\n  const startEditingTitle = session => {\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n\n  // Save the session name\n  const saveTitle = async sessionId => {\n    try {\n      const response = await fetch(`${API_URL}/update_session_title?session_id=${sessionId}&new_title=${encodeURIComponent(editingTitle)}`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n  const cancelEditing = () => {\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n  const deleteSession = async sessionIdToDelete => {\n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch {\n      return '';\n    }\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = (message, index) => {\n    if (message.sender === 'bot') {\n      const hasAlternatives = message.alternatives && message.alternatives.length > 1;\n      const currentIndex = message.activeIndex || 0;\n      const totalAlternatives = message.alternatives ? message.alternatives.length : 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-content ${message.isError ? 'error' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-message-controls\",\n          children: [hasAlternatives && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alternatives-navigation\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-btn\",\n              onClick: () => navigateAlternatives(index, -1),\n              title: \"Previous alternative\",\n              children: \"\\u2190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alternatives-counter\",\n              children: [currentIndex + 1, \" / \", totalAlternatives]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-btn\",\n              onClick: () => navigateAlternatives(index, 1),\n              title: \"Next alternative\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"regenerate-btn\",\n            onClick: () => handleRegenerate(index),\n            disabled: regeneratingIndex === index,\n            title: \"Regenerate response\",\n            children: regeneratingIndex === index ? '⟳' : '🔄'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-content ${message.isError ? 'error' : ''}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        onClick: generateNewSession,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-list\",\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `session-item ${session.session_id === sessionId ? 'active' : ''}`,\n          children: editingSessionId === session.session_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-edit\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingTitle,\n              onChange: e => setEditingTitle(e.target.value),\n              onKeyDown: e => {\n                e.stopPropagation();\n                if (e.key === 'Enter') {\n                  saveTitle(session.session_id);\n                } else if (e.key === 'Escape') {\n                  cancelEditing();\n                }\n              },\n              onBlur: () => cancelEditing(),\n              className: \"session-title-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-edit-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  saveTitle(session.session_id);\n                },\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  cancelEditing();\n                },\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-content\",\n            onClick: () => switchSession(session),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-title\",\n              children: session.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-date\",\n              children: formatDate(session.last_updated)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn edit-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  startEditingTitle(session);\n                },\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn delete-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteSession(session.session_id);\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, this)\n        }, session.session_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"session-id\",\n          children: ((_sessions$find = sessions.find(s => s.session_id === sessionId)) === null || _sessions$find === void 0 ? void 0 : _sessions$find.title) || `Session: ${(sessionId === null || sessionId === void 0 ? void 0 : sessionId.substring(0, 8)) || 'Loading'}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: renderMessage(message)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content loading\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), isUploaderOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploader-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploader-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploader-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Manage Files for Session\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-btn\",\n                onClick: () => setIsUploaderOpen(false),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploaded-files-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Uploaded Files (\", uploadedFiles.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploaded-files-list\",\n                children: uploadedFiles.length > 0 ? uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploaded-file-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-name\",\n                    children: file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-file-btn\",\n                    onClick: () => handleDeleteFile(file),\n                    title: \"Delete file\",\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-files-message\",\n                  children: \"No files uploaded for this session yet.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-new-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Upload New Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleUploadFiles,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  multiple: true,\n                  onChange: handleFileSelect,\n                  className: \"file-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-files\",\n                  children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"selected-file\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: file.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => {\n                        const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                        setSelectedFiles(newFiles);\n                      },\n                      className: \"remove-selected-btn\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploader-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => setIsUploaderOpen(false),\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    disabled: selectedFiles.length === 0,\n                    children: [\"Upload (\", selectedFiles.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => setIsUploaderOpen(true),\n            children: \"\\uD83D\\uDCCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"input-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: \"Type your message...\",\n              disabled: isLoading,\n              className: \"message-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !input.trim() || isLoading,\n              className: \"send-btn\",\n              children: \"\\u21B5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KsFVpBkTuruFFtNd+c3zqMOSPMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","_sessions$find","messages","setMessages","input","setInput","sessionId","setSessionId","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","isUploaderOpen","setIsUploaderOpen","sessions","setSessions","files","setFiles","selectedFiles","setSelectedFiles","editingSessionId","setEditingSessionId","editingTitle","setEditingTitle","uploadedFiles","setUploadedFiles","regeneratingIndex","setRegeneratingIndex","chatEndRef","API_URL","fetchSessions","generateNewSession","scrollToBottom","fetchUploadedFiles","_chatEndRef$current","current","scrollIntoView","behavior","response","fetch","data","json","error","console","session_id","setTimeout","handleSendMessage","e","preventDefault","trim","userMessage","text","sender","method","headers","body","JSON","stringify","message","isError","length","handleUploadFiles","formData","FormData","append","i","success","fetchChatHistory","sessId","log","history","formattedMessages","content","type","push","handleFileSelect","Array","from","target","switchSession","session","handleDeleteFile","fileName","window","confirm","filename","startEditingTitle","title","saveTitle","encodeURIComponent","ok","cancelEditing","deleteSession","sessionIdToDelete","formatDate","dateString","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","renderMessage","index","hasAlternatives","alternatives","currentIndex","activeIndex","totalAlternatives","className","children","_jsxFileName","lineNumber","columnNumber","onClick","navigateAlternatives","handleRegenerate","disabled","map","stopPropagation","value","onChange","onKeyDown","key","onBlur","autoFocus","last_updated","find","s","substring","ref","file","onSubmit","multiple","name","newFiles","filter","_","placeholder","_c","$RefreshReg$"],"sources":["/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [regeneratingIndex, setRegeneratingIndex] = useState(null);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // To load uploaded files when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchUploadedFiles(sessionId);\n    }\n  }, [sessionId]);\n\n  const scrollToBottom = () => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      // Refresh sessions list after creating new session\n      setTimeout(fetchSessions, 500);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!input.trim()) return;\n    \n    // Check if files have been uploaded for this session\n    const userMessage = { text: input, sender: 'user' };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input,\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (data.error) {\n        setMessages([...messages, userMessage, { text: data.error, sender: 'bot', isError: true }]);\n      } else if (data.response) {\n        // Now storing the response as is, without pre-processing\n        setMessages([...messages, userMessage, { text: data.response, sender: 'bot' }]);\n        // Refresh sessions to update titles if this was the first message\n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, { \n        text: 'An error occurred. Please try again later.', \n        sender: 'bot', \n        isError: true \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // To refresh the uploaded files list\n  const handleUploadFiles = async (e) => {\n    e.preventDefault();\n    \n    if (selectedFiles.length === 0) return;\n    \n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    \n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    \n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setFiles([...files, ...selectedFiles]);\n        setSelectedFiles([]);\n        // Refresh uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, { \n          text: `Successfully uploaded ${selectedFiles.length} file(s).`, \n          sender: 'system' \n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, { \n        text: 'Failed to upload files. Please try again.', \n        sender: 'system', \n        isError: true \n      }]);\n    }\n  };\n\n  const fetchChatHistory = async (sessId) => {\n    try {\n      setIsLoading(true);\n      console.log(`Fetching chat history for session: ${sessId}`);\n      \n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      \n      console.log('Chat history response:', data);\n      \n      if (data.history && data.history.length > 0) {\n        // Convert the API response to our message format\n        const formattedMessages = [];\n        for (let i = 0; i < data.history.length; i += 2) {\n          // User message\n          if (data.history[i] && data.history[i].content && data.history[i].type === 'HumanMessage') {\n            formattedMessages.push({ \n              text: data.history[i].content, \n              sender: 'user' \n            });\n          }\n          // Bot message\n          if (data.history[i + 1] && data.history[i + 1].content && data.history[i + 1].type === 'AIMessage') {\n            formattedMessages.push({ \n              text: data.history[i + 1].content, \n              sender: 'bot' \n            });\n          }\n        }\n        \n        console.log('Formatted messages:', formattedMessages);\n        setMessages(formattedMessages);\n      } else {\n        console.log('No chat history found');\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n\n  const switchSession = (session) => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n    fetchUploadedFiles(session.session_id);\n  };\n\n  // Fetch uploaded files in each session to show them up later\n  const fetchUploadedFiles = async (sessId) => {\n    try {\n      const response = await fetch(`${API_URL}/uploaded_files?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.files) {\n        setUploadedFiles(data.files);\n      } else {\n        setUploadedFiles([]);\n      }\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n      setUploadedFiles([]);\n    }\n  };\n\n  // Delete Uploaded Files\n  const handleDeleteFile = async (fileName) => {\n    if (!window.confirm(`Are you sure you want to delete \"${fileName}\"?`)) {\n      return;\n    }\n  \n    try {\n      const response = await fetch(`${API_URL}/delete_file`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          filename: fileName\n        }),\n      });\n  \n      const data = await response.json();\n      \n      if (data.success) {\n        // Refresh the uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, { \n          text: `Successfully deleted \"${fileName}\".`, \n          sender: 'system' \n        }]);\n      } else {\n        setMessages([...messages, { \n          text: `Failed to delete \"${fileName}\". ${data.error || ''}`, \n          sender: 'system', \n          isError: true \n        }]);\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setMessages([...messages, { \n        text: `Failed to delete \"${fileName}\". Please try again.`, \n        sender: 'system', \n        isError: true \n      }]);\n    }\n  };\n\n  // Edit the chat name (or session name)\n  const startEditingTitle = (session) => {\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n\n  // Save the session name\n  const saveTitle = async (sessionId) => {\n    try {\n      const response = await fetch(`${API_URL}/update_session_title?session_id=${sessionId}&new_title=${encodeURIComponent(editingTitle)}`, {\n        method: 'PUT',\n      });\n      \n      if (response.ok) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n\n  const cancelEditing = () => {\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n\n  const deleteSession = async (sessionIdToDelete) => {\n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE',\n        });\n        \n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } catch {\n      return '';\n    }\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = (message, index) => {\n    if (message.sender === 'bot') {\n      const hasAlternatives = message.alternatives && message.alternatives.length > 1;\n      const currentIndex = message.activeIndex || 0;\n      const totalAlternatives = message.alternatives ? message.alternatives.length : 1;\n      \n      return (\n        <div className=\"bot-message-container\">\n          <div className={`message-content ${message.isError ? 'error' : ''}`}>\n            <ReactMarkdown>{message.text}</ReactMarkdown>\n          </div>\n          <div className=\"bot-message-controls\">\n            {hasAlternatives && (\n              <div className=\"alternatives-navigation\">\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => navigateAlternatives(index, -1)}\n                  title=\"Previous alternative\"\n                >\n                  ←\n                </button>\n                <span className=\"alternatives-counter\">\n                  {currentIndex + 1} / {totalAlternatives}\n                </span>\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => navigateAlternatives(index, 1)}\n                  title=\"Next alternative\"\n                >\n                  →\n                </button>\n              </div>\n            )}\n            <button \n              className=\"regenerate-btn\"\n              onClick={() => handleRegenerate(index)}\n              disabled={regeneratingIndex === index}\n              title=\"Regenerate response\"\n            >\n              {regeneratingIndex === index ? '⟳' : '🔄'}\n            </button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`message-content ${message.isError ? 'error' : ''}`}>\n          {message.text}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Sidebar */}\n      <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n        <button className=\"new-chat-btn\" onClick={generateNewSession}>\n          New Chat\n        </button>\n        <div className=\"sessions-list\">\n          {sessions.map((session) => (\n            <div \n              key={session.session_id} \n              className={`session-item ${session.session_id === sessionId ? 'active' : ''}`}\n            >\n              {editingSessionId === session.session_id ? (\n                <div className=\"session-edit\" onClick={(e) => e.stopPropagation()}>\n                  <input\n                    type=\"text\"\n                    value={editingTitle}\n                    onChange={(e) => setEditingTitle(e.target.value)}\n                    onKeyDown={(e) => {\n                      e.stopPropagation();\n                      if (e.key === 'Enter') {\n                        saveTitle(session.session_id);\n                      } else if (e.key === 'Escape') {\n                        cancelEditing();\n                      }\n                    }}\n                    onBlur={() => cancelEditing()}\n                    className=\"session-title-input\"\n                    autoFocus\n                  />\n                  <div className=\"session-edit-buttons\">\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        saveTitle(session.session_id);\n                      }}\n                    >\n                      ✓\n                    </button>\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        cancelEditing();\n                      }}\n                    >\n                      ✕\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div \n                  className=\"session-content\"\n                  onClick={() => switchSession(session)}\n                >\n                  <div className=\"session-title\">{session.title}</div>\n                  <div className=\"session-date\">{formatDate(session.last_updated)}</div>\n                  <div className=\"session-actions\">\n                    <button \n                      className=\"session-action-btn edit-btn\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEditingTitle(session);\n                      }}\n                    >\n                      ✏️\n                    </button>\n                    <button \n                      className=\"session-action-btn delete-btn\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        deleteSession(session.session_id);\n                      }}\n                    >\n                      🗑️\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className={`main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`}>\n        <div className=\"chat-header\">\n          <button \n            className=\"sidebar-toggle\" \n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n          >\n            ☰\n          </button>\n          <span className=\"session-id\">\n            {sessions.find(s => s.session_id === sessionId)?.title || `Session: ${sessionId?.substring(0, 8) || 'Loading'}...`}\n          </span>\n        </div>\n\n        <div className=\"chat-container\">\n          <div className=\"messages-container\">\n            {messages.map((message, index) => (\n              <div key={index} className={`message ${message.sender}`}>\n                {renderMessage(message)}\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"message bot\">\n                <div className=\"message-content loading\">\n                  <div className=\"typing-indicator\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={chatEndRef} />\n          </div>\n\n          {/* File Uploader Dialog */}\n          {isUploaderOpen && (\n            <div className=\"uploader-overlay\">\n              <div className=\"uploader-container\">\n                <div className=\"uploader-header\">\n                  <h3>Manage Files for Session</h3>\n                  <button \n                    className=\"close-btn\"\n                    onClick={() => setIsUploaderOpen(false)}\n                  >\n                    ×\n                  </button>\n                </div>\n                \n                {/* Uploaded Files Section */}\n                <div className=\"uploaded-files-section\">\n                  <h4>Uploaded Files ({uploadedFiles.length})</h4>\n                  <div className=\"uploaded-files-list\">\n                    {uploadedFiles.length > 0 ? (\n                      uploadedFiles.map((file, index) => (\n                        <div key={index} className=\"uploaded-file-item\">\n                          <span className=\"file-name\">{file}</span>\n                          <button \n                            className=\"delete-file-btn\"\n                            onClick={() => handleDeleteFile(file)}\n                            title=\"Delete file\"\n                          >\n                            🗑️\n                          </button>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"no-files-message\">\n                        No files uploaded for this session yet.\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Upload New Files Section */}\n                <div className=\"upload-new-section\">\n                  <h4>Upload New Files</h4>\n                  <form onSubmit={handleUploadFiles}>\n                    <input \n                      type=\"file\" \n                      multiple \n                      onChange={handleFileSelect} \n                      className=\"file-input\"\n                    />\n                    <div className=\"selected-files\">\n                      {Array.from(selectedFiles).map((file, index) => (\n                        <div key={index} className=\"selected-file\">\n                          <span>{file.name}</span>\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                              setSelectedFiles(newFiles);\n                            }}\n                            className=\"remove-selected-btn\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"uploader-actions\">\n                      <button type=\"button\" onClick={() => setIsUploaderOpen(false)}>\n                        Close\n                      </button>\n                      <button type=\"submit\" disabled={selectedFiles.length === 0}>\n                        Upload ({selectedFiles.length})\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Input Area */}\n          <div className=\"input-container\">\n            <button \n              className=\"upload-btn\" \n              onClick={() => setIsUploaderOpen(true)}\n            >\n              📎\n            </button>\n            <form onSubmit={handleSendMessage} className=\"input-form\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type your message...\"\n                disabled={isLoading}\n                className=\"message-input\"\n              />\n              <button \n                type=\"submit\" \n                disabled={!input.trim() || isLoading}\n                className=\"send-btn\"\n              >\n                ↵\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}