{"ast":null,"code":"var _jsxFileName = \"/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _sessions$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [regeneratingIndex, setRegeneratingIndex] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showRegenerateModal, setShowRegenerateModal] = useState(false);\n  const [regeneratePrompt, setRegeneratePrompt] = useState('');\n  const [currentRegenerateConversation, setCurrentRegenerateConversation] = useState(null);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    // generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // To load uploaded files when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchUploadedFiles(sessionId);\n    }\n  }, [sessionId]);\n  const scrollToBottom = () => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      setUploadedFiles([]);\n\n      // Refresh sessions list after creating new session\n      setTimeout(fetchSessions, 500);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      id: Date.now() + '_user',\n      conversation_id: Date.now() + '_conv' // Add conversation tracking\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages([...messages, userMessage, {\n          text: data.error,\n          sender: 'bot',\n          isError: true,\n          id: Date.now() + '_bot_error',\n          conversation_id: userMessage.conversation_id\n        }]);\n      } else if (data.response) {\n        setMessages([...messages, userMessage, {\n          text: data.response,\n          sender: 'bot',\n          id: Date.now() + '_bot',\n          conversation_id: userMessage.conversation_id,\n          alternatives: [data.response],\n          activeIndex: 0,\n          total_alternatives: 1\n        }]);\n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, {\n        text: 'An error occurred. Please try again later.',\n        sender: 'bot',\n        isError: true,\n        id: Date.now() + '_bot_error',\n        conversation_id: userMessage.conversation_id\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // To refresh the uploaded files list\n  const handleUploadFiles = async e => {\n    e.preventDefault();\n    if (selectedFiles.length === 0) return;\n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    try {\n      setIsUploading(true);\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        var _data$uploaded_files;\n        setSelectedFiles([]);\n        // Refresh uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, {\n          text: `Successfully uploaded ${((_data$uploaded_files = data.uploaded_files) === null || _data$uploaded_files === void 0 ? void 0 : _data$uploaded_files.length) || 0} file(s)`,\n          sender: 'system'\n        }]);\n      } else {\n        const errorFiles = data.failed_files ? data.failed_files.join(', ') : 'some files';\n        setMessages([...messages, {\n          text: `Failed to upload ${errorFiles}`,\n          sender: 'system',\n          isError: true\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, {\n        text: 'Failed to upload files. Please try again.',\n        sender: 'system',\n        isError: true\n      }]);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const fetchChatHistory = async sessId => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.history && data.history.length > 0) {\n        const formattedMessages = data.history.map(message => ({\n          text: message.text,\n          sender: message.sender,\n          id: message.id,\n          conversation_id: message.conversation_id,\n          alternatives: message.alternatives || [message.text],\n          activeIndex: message.activeIndex || 0,\n          total_alternatives: message.total_alternatives || 1\n        }));\n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFileSelect = e => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n  const switchSession = session => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n    fetchUploadedFiles(session.session_id);\n  };\n\n  // Fetch uploaded files in each session to show them up later\n  const fetchUploadedFiles = async sessId => {\n    try {\n      const response = await fetch(`${API_URL}/uploaded_files?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.files) {\n        setUploadedFiles(data.files);\n      } else {\n        setUploadedFiles([]);\n      }\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n      setUploadedFiles([]);\n    }\n  };\n\n  // Delete Uploaded Files\n  const handleDeleteFile = async fileName => {\n    if (!window.confirm(`Are you sure you want to delete \"${fileName}\"?`)) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/delete_file`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          filename: fileName\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Refresh the uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, {\n          text: `Successfully deleted \"${fileName}\".`,\n          sender: 'system'\n        }]);\n      } else {\n        setMessages([...messages, {\n          text: `Failed to delete \"${fileName}\". ${data.error || ''}`,\n          sender: 'system',\n          isError: true\n        }]);\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setMessages([...messages, {\n        text: `Failed to delete \"${fileName}\". Please try again.`,\n        sender: 'system',\n        isError: true\n      }]);\n    }\n  };\n\n  // Edit the chat name (or session name)\n  const startEditingTitle = session => {\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n\n  // Save the session name\n  const saveTitle = async sessionId => {\n    try {\n      const response = await fetch(`${API_URL}/update_session_title?session_id=${sessionId}&new_title=${encodeURIComponent(editingTitle)}`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n  const cancelEditing = () => {\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n  const deleteSession = async sessionIdToDelete => {\n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch {\n      return '';\n    }\n  };\n\n  // Regenerate response\n  const handleRegenerate = async messageIndex => {\n    const botMessage = messages[messageIndex];\n    if (!botMessage || botMessage.sender !== 'bot') return;\n    const userMessage = messages[messageIndex - 1];\n    if (!userMessage || userMessage.sender !== 'user') return;\n    setRegeneratingIndex(messageIndex);\n    try {\n      const response = await fetch(`${API_URL}/regenerate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: userMessage.text\n        })\n      });\n      const data = await response.json();\n      if (data.response) {\n        const newMessages = [...messages];\n        const currentBotMessage = newMessages[messageIndex];\n        if (!currentBotMessage.alternatives) {\n          currentBotMessage.alternatives = [currentBotMessage.text];\n          currentBotMessage.activeIndex = 0;\n        }\n        currentBotMessage.alternatives.push(data.response);\n        currentBotMessage.activeIndex = currentBotMessage.alternatives.length - 1;\n        currentBotMessage.text = data.response;\n        setMessages(newMessages);\n\n        // Update the chat history in the backend\n        await fetch(`${API_URL}/update_chat_history`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            session_id: sessionId,\n            messages: newMessages\n          })\n        });\n      }\n    } catch (error) {\n      console.error('Error regenerating response:', error);\n    } finally {\n      setRegeneratingIndex(null);\n    }\n  };\n\n  // Move through responses\n  const navigateAlternatives = (messageIndex, direction) => {\n    const newMessages = [...messages];\n    const message = newMessages[messageIndex];\n    if (!message.alternatives || message.alternatives.length <= 1) return;\n    let newIndex = message.activeIndex + direction;\n\n    // Wrap around\n    if (newIndex < 0) {\n      newIndex = message.alternatives.length - 1;\n    } else if (newIndex >= message.alternatives.length) {\n      newIndex = 0;\n    }\n    message.activeIndex = newIndex;\n    message.text = message.alternatives[newIndex];\n    setMessages(newMessages);\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = (message, index) => {\n    if (message.sender === 'bot') {\n      const hasAlternatives = message.alternatives && message.alternatives.length > 1;\n      const currentIndex = message.activeIndex || 0;\n      const totalAlternatives = message.alternatives ? message.alternatives.length : 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-content ${message.isError ? 'error' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-message-controls\",\n          children: [hasAlternatives && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alternatives-navigation\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-btn\",\n              onClick: () => navigateAlternatives(index, -1),\n              title: \"Previous alternative\",\n              children: \"\\u2190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alternatives-counter\",\n              children: [currentIndex + 1, \" / \", totalAlternatives]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-btn\",\n              onClick: () => navigateAlternatives(index, 1),\n              title: \"Next alternative\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"regenerate-btn\",\n            onClick: () => handleRegenerate(index),\n            disabled: regeneratingIndex === index,\n            title: \"Regenerate response\",\n            children: regeneratingIndex === index ? '⟳' : '🔄'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-content ${message.isError ? 'error' : ''}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        onClick: generateNewSession,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-list\",\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `session-item ${session.session_id === sessionId ? 'active' : ''}`,\n          children: editingSessionId === session.session_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-edit\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingTitle,\n              onChange: e => setEditingTitle(e.target.value),\n              onKeyDown: e => {\n                e.stopPropagation();\n                if (e.key === 'Enter') {\n                  saveTitle(session.session_id);\n                } else if (e.key === 'Escape') {\n                  cancelEditing();\n                }\n              },\n              onBlur: () => cancelEditing(),\n              className: \"session-title-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-edit-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  saveTitle(session.session_id);\n                },\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  cancelEditing();\n                },\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-content\",\n            onClick: () => switchSession(session),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-title\",\n              children: session.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-date\",\n              children: formatDate(session.last_updated)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn edit-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  startEditingTitle(session);\n                },\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn delete-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteSession(session.session_id);\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this)\n        }, session.session_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"session-id\",\n          children: ((_sessions$find = sessions.find(s => s.session_id === sessionId)) === null || _sessions$find === void 0 ? void 0 : _sessions$find.title) || `Session: ${(sessionId === null || sessionId === void 0 ? void 0 : sessionId.substring(0, 8)) || 'Loading'}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: renderMessage(message, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content loading\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), isUploaderOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploader-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploader-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploader-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Manage Files for Session\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-btn\",\n                onClick: () => setIsUploaderOpen(false),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploaded-files-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Uploaded Files (\", uploadedFiles.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploaded-files-list\",\n                children: uploadedFiles.length > 0 ? uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploaded-file-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-name\",\n                    children: file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-file-btn\",\n                    onClick: () => handleDeleteFile(file),\n                    title: \"Delete file\",\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-files-message\",\n                  children: \"No files uploaded for this session yet.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-new-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Upload New Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleUploadFiles,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  multiple: true,\n                  onChange: handleFileSelect,\n                  className: \"file-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-files\",\n                  children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"selected-file\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: file.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 649,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => {\n                        const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                        setSelectedFiles(newFiles);\n                      },\n                      className: \"remove-selected-btn\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 650,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploader-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => setIsUploaderOpen(false),\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    disabled: selectedFiles.length === 0,\n                    children: [\"Upload (\", selectedFiles.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => setIsUploaderOpen(true),\n            children: \"\\uD83D\\uDCCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"input-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: \"Type your message...\",\n              disabled: isLoading,\n              className: \"message-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !input.trim() || isLoading,\n              className: \"send-btn\",\n              children: \"\\u21B5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WmHZytxxZANIyoI8jjukD4x5Bek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","_sessions$find","messages","setMessages","input","setInput","sessionId","setSessionId","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","isUploaderOpen","setIsUploaderOpen","sessions","setSessions","files","setFiles","selectedFiles","setSelectedFiles","editingSessionId","setEditingSessionId","editingTitle","setEditingTitle","uploadedFiles","setUploadedFiles","regeneratingIndex","setRegeneratingIndex","isUploading","setIsUploading","showRegenerateModal","setShowRegenerateModal","regeneratePrompt","setRegeneratePrompt","currentRegenerateConversation","setCurrentRegenerateConversation","chatEndRef","API_URL","fetchSessions","scrollToBottom","fetchUploadedFiles","_chatEndRef$current","current","scrollIntoView","behavior","response","fetch","data","json","error","console","generateNewSession","session_id","setTimeout","handleSendMessage","e","preventDefault","trim","userMessage","text","sender","id","Date","now","conversation_id","method","headers","body","JSON","stringify","message","isError","alternatives","activeIndex","total_alternatives","length","handleUploadFiles","formData","FormData","append","i","success","_data$uploaded_files","uploaded_files","errorFiles","failed_files","join","fetchChatHistory","sessId","history","formattedMessages","map","handleFileSelect","Array","from","target","switchSession","session","handleDeleteFile","fileName","window","confirm","filename","startEditingTitle","title","saveTitle","encodeURIComponent","ok","cancelEditing","deleteSession","sessionIdToDelete","formatDate","dateString","date","toLocaleDateString","toLocaleTimeString","hour","minute","handleRegenerate","messageIndex","botMessage","newMessages","currentBotMessage","push","navigateAlternatives","direction","newIndex","renderMessage","index","hasAlternatives","currentIndex","totalAlternatives","className","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","stopPropagation","type","value","onChange","onKeyDown","key","onBlur","autoFocus","last_updated","find","s","substring","ref","file","onSubmit","multiple","name","newFiles","filter","_","placeholder","_c","$RefreshReg$"],"sources":["/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [regeneratingIndex, setRegeneratingIndex] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showRegenerateModal, setShowRegenerateModal] = useState(false);\n  const [regeneratePrompt, setRegeneratePrompt] = useState('');\n  const [currentRegenerateConversation, setCurrentRegenerateConversation] = useState(null);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    // generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // To load uploaded files when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchUploadedFiles(sessionId);\n    }\n  }, [sessionId]);\n\n  const scrollToBottom = () => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      setUploadedFiles([]);\n      \n      // Refresh sessions list after creating new session\n      setTimeout(fetchSessions, 500);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!input.trim()) return;\n    \n    const userMessage = { \n      text: input, \n      sender: 'user', \n      id: Date.now() + '_user',\n      conversation_id: Date.now() + '_conv'  // Add conversation tracking\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n  \n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input,\n        }),\n      });\n  \n      const data = await response.json();\n      \n      if (data.error) {\n        setMessages([...messages, userMessage, { \n          text: data.error, \n          sender: 'bot', \n          isError: true,\n          id: Date.now() + '_bot_error',\n          conversation_id: userMessage.conversation_id\n        }]);\n      } else if (data.response) {\n        setMessages([...messages, userMessage, { \n          text: data.response, \n          sender: 'bot',\n          id: Date.now() + '_bot',\n          conversation_id: userMessage.conversation_id,\n          alternatives: [data.response],\n          activeIndex: 0,\n          total_alternatives: 1\n        }]);\n        \n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, { \n        text: 'An error occurred. Please try again later.', \n        sender: 'bot', \n        isError: true,\n        id: Date.now() + '_bot_error',\n        conversation_id: userMessage.conversation_id\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // To refresh the uploaded files list\n  const handleUploadFiles = async (e) => {\n    e.preventDefault();\n    \n    if (selectedFiles.length === 0) return;\n    \n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    \n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    \n    try {\n      setIsUploading(true);\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setSelectedFiles([]);\n        // Refresh uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, { \n          text: `Successfully uploaded ${data.uploaded_files?.length || 0} file(s)`, \n          sender: 'system' \n        }]);\n      } else {\n        const errorFiles = data.failed_files ? data.failed_files.join(', ') : 'some files';\n        setMessages([...messages, { \n          text: `Failed to upload ${errorFiles}`, \n          sender: 'system', \n          isError: true \n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, { \n        text: 'Failed to upload files. Please try again.', \n        sender: 'system', \n        isError: true \n      }]);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const fetchChatHistory = async (sessId) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      \n      if (data.history && data.history.length > 0) {\n        const formattedMessages = data.history.map(message => ({\n          text: message.text,\n          sender: message.sender,\n          id: message.id,\n          conversation_id: message.conversation_id,\n          alternatives: message.alternatives || [message.text],\n          activeIndex: message.activeIndex || 0,\n          total_alternatives: message.total_alternatives || 1\n        }));\n        \n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n\n  const switchSession = (session) => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n    fetchUploadedFiles(session.session_id);\n  };\n\n  // Fetch uploaded files in each session to show them up later\n  const fetchUploadedFiles = async (sessId) => {\n    try {\n      const response = await fetch(`${API_URL}/uploaded_files?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.files) {\n        setUploadedFiles(data.files);\n      } else {\n        setUploadedFiles([]);\n      }\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n      setUploadedFiles([]);\n    }\n  };\n\n  // Delete Uploaded Files\n  const handleDeleteFile = async (fileName) => {\n    if (!window.confirm(`Are you sure you want to delete \"${fileName}\"?`)) {\n      return;\n    }\n  \n    try {\n      const response = await fetch(`${API_URL}/delete_file`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          filename: fileName\n        }),\n      });\n  \n      const data = await response.json();\n      \n      if (data.success) {\n        // Refresh the uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, { \n          text: `Successfully deleted \"${fileName}\".`, \n          sender: 'system' \n        }]);\n      } else {\n        setMessages([...messages, { \n          text: `Failed to delete \"${fileName}\". ${data.error || ''}`, \n          sender: 'system', \n          isError: true \n        }]);\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setMessages([...messages, { \n        text: `Failed to delete \"${fileName}\". Please try again.`, \n        sender: 'system', \n        isError: true \n      }]);\n    }\n  };\n\n  // Edit the chat name (or session name)\n  const startEditingTitle = (session) => {\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n\n  // Save the session name\n  const saveTitle = async (sessionId) => {\n    try {\n      const response = await fetch(`${API_URL}/update_session_title?session_id=${sessionId}&new_title=${encodeURIComponent(editingTitle)}`, {\n        method: 'PUT',\n      });\n      \n      if (response.ok) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n\n  const cancelEditing = () => {\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n\n  const deleteSession = async (sessionIdToDelete) => {\n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE',\n        });\n        \n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } catch {\n      return '';\n    }\n  };\n\n  // Regenerate response\n  const handleRegenerate = async (messageIndex) => {\n    const botMessage = messages[messageIndex];\n    if (!botMessage || botMessage.sender !== 'bot') return;\n    \n    const userMessage = messages[messageIndex - 1];\n    if (!userMessage || userMessage.sender !== 'user') return;\n  \n    setRegeneratingIndex(messageIndex);\n  \n    try {\n      const response = await fetch(`${API_URL}/regenerate`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: userMessage.text\n        })\n      });\n      \n      const data = await response.json();\n      \n      if (data.response) {\n        const newMessages = [...messages];\n        const currentBotMessage = newMessages[messageIndex];\n        \n        if (!currentBotMessage.alternatives) {\n          currentBotMessage.alternatives = [currentBotMessage.text];\n          currentBotMessage.activeIndex = 0;\n        }\n        \n        currentBotMessage.alternatives.push(data.response);\n        currentBotMessage.activeIndex = currentBotMessage.alternatives.length - 1;\n        currentBotMessage.text = data.response;\n        \n        setMessages(newMessages);\n        \n        // Update the chat history in the backend\n        await fetch(`${API_URL}/update_chat_history`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ \n            session_id: sessionId,\n            messages: newMessages \n          })\n        });\n        \n      }\n    } catch (error) {\n      console.error('Error regenerating response:', error);\n    } finally {\n      setRegeneratingIndex(null);\n    }\n  };\n\n  // Move through responses\n  const navigateAlternatives = (messageIndex, direction) => {\n    const newMessages = [...messages];\n    const message = newMessages[messageIndex];\n    \n    if (!message.alternatives || message.alternatives.length <= 1) return;\n    \n    let newIndex = message.activeIndex + direction;\n    \n    // Wrap around\n    if (newIndex < 0) {\n      newIndex = message.alternatives.length - 1;\n    } else if (newIndex >= message.alternatives.length) {\n      newIndex = 0;\n    }\n    \n    message.activeIndex = newIndex;\n    message.text = message.alternatives[newIndex];\n    \n    setMessages(newMessages);\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = (message, index) => {\n    if (message.sender === 'bot') {\n      const hasAlternatives = message.alternatives && message.alternatives.length > 1;\n      const currentIndex = message.activeIndex || 0;\n      const totalAlternatives = message.alternatives ? message.alternatives.length : 1;\n      \n      return (\n        <div className=\"bot-message-container\">\n          <div className={`message-content ${message.isError ? 'error' : ''}`}>\n            <ReactMarkdown>{message.text}</ReactMarkdown>\n          </div>\n          <div className=\"bot-message-controls\">\n            {hasAlternatives && (\n              <div className=\"alternatives-navigation\">\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => navigateAlternatives(index, -1)}\n                  title=\"Previous alternative\"\n                >\n                  ←\n                </button>\n                <span className=\"alternatives-counter\">\n                  {currentIndex + 1} / {totalAlternatives}\n                </span>\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => navigateAlternatives(index, 1)}\n                  title=\"Next alternative\"\n                >\n                  →\n                </button>\n              </div>\n            )}\n            <button \n              className=\"regenerate-btn\"\n              onClick={() => handleRegenerate(index)}\n              disabled={regeneratingIndex === index}\n              title=\"Regenerate response\"\n            >\n              {regeneratingIndex === index ? '⟳' : '🔄'}\n            </button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`message-content ${message.isError ? 'error' : ''}`}>\n          {message.text}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Sidebar */}\n      <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n        <button className=\"new-chat-btn\" onClick={generateNewSession}>\n          New Chat\n        </button>\n        <div className=\"sessions-list\">\n          {sessions.map((session) => (\n            <div \n              key={session.session_id} \n              className={`session-item ${session.session_id === sessionId ? 'active' : ''}`}\n            >\n              {editingSessionId === session.session_id ? (\n                <div className=\"session-edit\" onClick={(e) => e.stopPropagation()}>\n                  <input\n                    type=\"text\"\n                    value={editingTitle}\n                    onChange={(e) => setEditingTitle(e.target.value)}\n                    onKeyDown={(e) => {\n                      e.stopPropagation();\n                      if (e.key === 'Enter') {\n                        saveTitle(session.session_id);\n                      } else if (e.key === 'Escape') {\n                        cancelEditing();\n                      }\n                    }}\n                    onBlur={() => cancelEditing()}\n                    className=\"session-title-input\"\n                    autoFocus\n                  />\n                  <div className=\"session-edit-buttons\">\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        saveTitle(session.session_id);\n                      }}\n                    >\n                      ✓\n                    </button>\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        cancelEditing();\n                      }}\n                    >\n                      ✕\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div \n                  className=\"session-content\"\n                  onClick={() => switchSession(session)}\n                >\n                  <div className=\"session-title\">{session.title}</div>\n                  <div className=\"session-date\">{formatDate(session.last_updated)}</div>\n                  <div className=\"session-actions\">\n                    <button \n                      className=\"session-action-btn edit-btn\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEditingTitle(session);\n                      }}\n                    >\n                      ✏️\n                    </button>\n                    <button \n                      className=\"session-action-btn delete-btn\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        deleteSession(session.session_id);\n                      }}\n                    >\n                      🗑️\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className={`main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`}>\n        <div className=\"chat-header\">\n          <button \n            className=\"sidebar-toggle\" \n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n          >\n            ☰\n          </button>\n          <span className=\"session-id\">\n            {sessions.find(s => s.session_id === sessionId)?.title || `Session: ${sessionId?.substring(0, 8) || 'Loading'}...`}\n          </span>\n        </div>\n\n        <div className=\"chat-container\">\n          <div className=\"messages-container\">\n            {messages.map((message, index) => (\n              <div key={index} className={`message ${message.sender}`}>\n                {renderMessage(message, index)}\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"message bot\">\n                <div className=\"message-content loading\">\n                  <div className=\"typing-indicator\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={chatEndRef} />\n          </div>\n\n          {/* File Uploader Dialog */}\n          {isUploaderOpen && (\n            <div className=\"uploader-overlay\">\n              <div className=\"uploader-container\">\n                <div className=\"uploader-header\">\n                  <h3>Manage Files for Session</h3>\n                  <button \n                    className=\"close-btn\"\n                    onClick={() => setIsUploaderOpen(false)}\n                  >\n                    ×\n                  </button>\n                </div>\n                \n                {/* Uploaded Files Section */}\n                <div className=\"uploaded-files-section\">\n                  <h4>Uploaded Files ({uploadedFiles.length})</h4>\n                  <div className=\"uploaded-files-list\">\n                    {uploadedFiles.length > 0 ? (\n                      uploadedFiles.map((file, index) => (\n                        <div key={index} className=\"uploaded-file-item\">\n                          <span className=\"file-name\">{file}</span>\n                          <button \n                            className=\"delete-file-btn\"\n                            onClick={() => handleDeleteFile(file)}\n                            title=\"Delete file\"\n                          >\n                            🗑️\n                          </button>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"no-files-message\">\n                        No files uploaded for this session yet.\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Upload New Files Section */}\n                <div className=\"upload-new-section\">\n                  <h4>Upload New Files</h4>\n                  <form onSubmit={handleUploadFiles}>\n                    <input \n                      type=\"file\" \n                      multiple \n                      onChange={handleFileSelect} \n                      className=\"file-input\"\n                    />\n                    <div className=\"selected-files\">\n                      {Array.from(selectedFiles).map((file, index) => (\n                        <div key={index} className=\"selected-file\">\n                          <span>{file.name}</span>\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                              setSelectedFiles(newFiles);\n                            }}\n                            className=\"remove-selected-btn\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"uploader-actions\">\n                      <button type=\"button\" onClick={() => setIsUploaderOpen(false)}>\n                        Close\n                      </button>\n                      <button type=\"submit\" disabled={selectedFiles.length === 0}>\n                        Upload ({selectedFiles.length})\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Input Area */}\n          <div className=\"input-container\">\n            <button \n              className=\"upload-btn\" \n              onClick={() => setIsUploaderOpen(true)}\n            >\n              📎\n            </button>\n            <form onSubmit={handleSendMessage} className=\"input-form\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type your message...\"\n                disabled={isLoading}\n                className=\"message-input\"\n              />\n              <button \n                type=\"submit\" \n                disabled={!input.trim() || isLoading}\n                className=\"send-btn\"\n              >\n                ↵\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACyC,6BAA6B,EAAEC,gCAAgC,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACxF,MAAM2C,UAAU,GAAGzC,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM0C,OAAO,GAAG,uBAAuB,CAAC,CAAC;;EAEzC;EACA3C,SAAS,CAAC,MAAM;IACd4C,aAAa,CAAC,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5C,SAAS,CAAC,MAAM;IACd6C,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACrC,QAAQ,CAAC,CAAC;;EAEd;EACAR,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,EAAE;MACbkC,kBAAkB,CAAClC,SAAS,CAAC;IAC/B;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMiC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAE,mBAAA;IAC3B,CAAAA,mBAAA,GAAAL,UAAU,CAACM,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMN,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,WAAW,CAAC;MACnD,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCjC,WAAW,CAACgC,IAAI,CAACjC,QAAQ,IAAI,EAAE,CAAC;IAClC,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,mBAAmB,CAAC;MAC3D,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCzC,YAAY,CAACwC,IAAI,CAACK,UAAU,CAAC;MAC7BjD,WAAW,CAAC,EAAE,CAAC;MACfsB,gBAAgB,CAAC,EAAE,CAAC;;MAEpB;MACA4B,UAAU,CAACf,aAAa,EAAE,GAAG,CAAC;IAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACpD,KAAK,CAACqD,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAEvD,KAAK;MACXwD,MAAM,EAAE,MAAM;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO;MACxBC,eAAe,EAAEF,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAE;IACzC,CAAC;IACD5D,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,CAAC,CAAC;IACvCrD,QAAQ,CAAC,EAAE,CAAC;IACZI,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMoC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,OAAO,EAAE;QAC9C4B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjB,UAAU,EAAE9C,SAAS;UACrBgE,OAAO,EAAElE;QACX,CAAC;MACH,CAAC,CAAC;MAEF,MAAM2C,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACd9C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,EAAE;UACrCC,IAAI,EAAEZ,IAAI,CAACE,KAAK;UAChBW,MAAM,EAAE,KAAK;UACbW,OAAO,EAAE,IAAI;UACbV,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,YAAY;UAC7BC,eAAe,EAAEN,WAAW,CAACM;QAC/B,CAAC,CAAC,CAAC;MACL,CAAC,MAAM,IAAIjB,IAAI,CAACF,QAAQ,EAAE;QACxB1C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,EAAE;UACrCC,IAAI,EAAEZ,IAAI,CAACF,QAAQ;UACnBe,MAAM,EAAE,KAAK;UACbC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,MAAM;UACvBC,eAAe,EAAEN,WAAW,CAACM,eAAe;UAC5CQ,YAAY,EAAE,CAACzB,IAAI,CAACF,QAAQ,CAAC;UAC7B4B,WAAW,EAAE,CAAC;UACdC,kBAAkB,EAAE;QACtB,CAAC,CAAC,CAAC;QAEH,IAAIxE,QAAQ,CAACyE,MAAM,KAAK,CAAC,EAAE;UACzBtB,UAAU,CAACf,aAAa,EAAE,GAAG,CAAC;QAChC;MACF;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C9C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,EAAE;QACrCC,IAAI,EAAE,4CAA4C;QAClDC,MAAM,EAAE,KAAK;QACbW,OAAO,EAAE,IAAI;QACbV,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,YAAY;QAC7BC,eAAe,EAAEN,WAAW,CAACM;MAC/B,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRvD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMmE,iBAAiB,GAAG,MAAOrB,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAItC,aAAa,CAACyD,MAAM,KAAK,CAAC,EAAE;IAEhC,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEzE,SAAS,CAAC;IAExC,KAAK,IAAI0E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG9D,aAAa,CAACyD,MAAM,EAAEK,CAAC,EAAE,EAAE;MAC7CH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE7D,aAAa,CAAC8D,CAAC,CAAC,CAAC;IAC5C;IAEA,IAAI;MACFnD,cAAc,CAAC,IAAI,CAAC;MACpB,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,SAAS,EAAE;QAChD4B,MAAM,EAAE,MAAM;QACdE,IAAI,EAAEU;MACR,CAAC,CAAC;MAEF,MAAM9B,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACkC,OAAO,EAAE;QAAA,IAAAC,oBAAA;QAChB/D,gBAAgB,CAAC,EAAE,CAAC;QACpB;QACAqB,kBAAkB,CAAClC,SAAS,CAAC;QAC7BH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;UACxByD,IAAI,EAAE,yBAAyB,EAAAuB,oBAAA,GAAAnC,IAAI,CAACoC,cAAc,cAAAD,oBAAA,uBAAnBA,oBAAA,CAAqBP,MAAM,KAAI,CAAC,UAAU;UACzEf,MAAM,EAAE;QACV,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL,MAAMwB,UAAU,GAAGrC,IAAI,CAACsC,YAAY,GAAGtC,IAAI,CAACsC,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,YAAY;QAClFnF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;UACxByD,IAAI,EAAE,oBAAoByB,UAAU,EAAE;UACtCxB,MAAM,EAAE,QAAQ;UAChBW,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C9C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QACxByD,IAAI,EAAE,2CAA2C;QACjDC,MAAM,EAAE,QAAQ;QAChBW,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACR1C,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAM0D,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF/E,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMoC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,4BAA4BmD,MAAM,EAAE,CAAC;MAC5E,MAAMzC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAAC0C,OAAO,IAAI1C,IAAI,CAAC0C,OAAO,CAACd,MAAM,GAAG,CAAC,EAAE;QAC3C,MAAMe,iBAAiB,GAAG3C,IAAI,CAAC0C,OAAO,CAACE,GAAG,CAACrB,OAAO,KAAK;UACrDX,IAAI,EAAEW,OAAO,CAACX,IAAI;UAClBC,MAAM,EAAEU,OAAO,CAACV,MAAM;UACtBC,EAAE,EAAES,OAAO,CAACT,EAAE;UACdG,eAAe,EAAEM,OAAO,CAACN,eAAe;UACxCQ,YAAY,EAAEF,OAAO,CAACE,YAAY,IAAI,CAACF,OAAO,CAACX,IAAI,CAAC;UACpDc,WAAW,EAAEH,OAAO,CAACG,WAAW,IAAI,CAAC;UACrCC,kBAAkB,EAAEJ,OAAO,CAACI,kBAAkB,IAAI;QACpD,CAAC,CAAC,CAAC;QAEHvE,WAAW,CAACuF,iBAAiB,CAAC;MAChC,CAAC,MAAM;QACLvF,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC,CAAC,OAAO8C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD9C,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,SAAS;MACRM,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmF,gBAAgB,GAAIrC,CAAC,IAAK;IAC9BpC,gBAAgB,CAAC0E,KAAK,CAACC,IAAI,CAACvC,CAAC,CAACwC,MAAM,CAAC/E,KAAK,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMgF,aAAa,GAAIC,OAAO,IAAK;IACjC1F,YAAY,CAAC0F,OAAO,CAAC7C,UAAU,CAAC;IAChCjD,WAAW,CAAC,EAAE,CAAC;IACfoF,gBAAgB,CAACU,OAAO,CAAC7C,UAAU,CAAC;IACpCZ,kBAAkB,CAACyD,OAAO,CAAC7C,UAAU,CAAC;EACxC,CAAC;;EAED;EACA,MAAMZ,kBAAkB,GAAG,MAAOgD,MAAM,IAAK;IAC3C,IAAI;MACF,MAAM3C,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,8BAA8BmD,MAAM,EAAE,CAAC;MAC9E,MAAMzC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAAC/B,KAAK,EAAE;QACdS,gBAAgB,CAACsB,IAAI,CAAC/B,KAAK,CAAC;MAC9B,CAAC,MAAM;QACLS,gBAAgB,CAAC,EAAE,CAAC;MACtB;IACF,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDxB,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMyE,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,oCAAoCF,QAAQ,IAAI,CAAC,EAAE;MACrE;IACF;IAEA,IAAI;MACF,MAAMtD,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,cAAc,EAAE;QACrD4B,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjB,UAAU,EAAE9C,SAAS;UACrBgG,QAAQ,EAAEH;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAMpD,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACkC,OAAO,EAAE;QAChB;QACAzC,kBAAkB,CAAClC,SAAS,CAAC;QAC7BH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;UACxByD,IAAI,EAAE,yBAAyBwC,QAAQ,IAAI;UAC3CvC,MAAM,EAAE;QACV,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLzD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;UACxByD,IAAI,EAAE,qBAAqBwC,QAAQ,MAAMpD,IAAI,CAACE,KAAK,IAAI,EAAE,EAAE;UAC3DW,MAAM,EAAE,QAAQ;UAChBW,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C9C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QACxByD,IAAI,EAAE,qBAAqBwC,QAAQ,sBAAsB;QACzDvC,MAAM,EAAE,QAAQ;QAChBW,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL;EACF,CAAC;;EAED;EACA,MAAMgC,iBAAiB,GAAIN,OAAO,IAAK;IACrC5E,mBAAmB,CAAC4E,OAAO,CAAC7C,UAAU,CAAC;IACvC7B,eAAe,CAAC0E,OAAO,CAACO,KAAK,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAOnG,SAAS,IAAK;IACrC,IAAI;MACF,MAAMuC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,oCAAoC/B,SAAS,cAAcoG,kBAAkB,CAACpF,YAAY,CAAC,EAAE,EAAE;QACpI2C,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAIpB,QAAQ,CAAC8D,EAAE,EAAE;QACfrE,aAAa,CAAC,CAAC,CAAC,CAAC;QACjBjB,mBAAmB,CAAC,IAAI,CAAC;QACzBE,eAAe,CAAC,EAAE,CAAC;MACrB;IACF,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAM2D,aAAa,GAAGA,CAAA,KAAM;IAC1BvF,mBAAmB,CAAC,IAAI,CAAC;IACzBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMsF,aAAa,GAAG,MAAOC,iBAAiB,IAAK;IACjD,IAAIV,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MACnE,IAAI;QACF,MAAMxD,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,8BAA8ByE,iBAAiB,EAAE,EAAE;UACxF7C,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,IAAIpB,QAAQ,CAAC8D,EAAE,EAAE;UACfrE,aAAa,CAAC,CAAC,CAAC,CAAC;UACjB;UACA,IAAIwE,iBAAiB,KAAKxG,SAAS,EAAE;YACnC6C,kBAAkB,CAAC,CAAC;UACtB;QACF;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EAED,MAAM8D,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI;MACF,MAAMC,IAAI,GAAG,IAAInD,IAAI,CAACkD,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,CAAC,GAAG,GAAG,GAAGD,IAAI,CAACE,kBAAkB,CAAC,EAAE,EAAE;QAACC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAC;MAAS,CAAC,CAAC;IAC3G,CAAC,CAAC,MAAM;MACN,OAAO,EAAE;IACX;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAOC,YAAY,IAAK;IAC/C,MAAMC,UAAU,GAAGtH,QAAQ,CAACqH,YAAY,CAAC;IACzC,IAAI,CAACC,UAAU,IAAIA,UAAU,CAAC5D,MAAM,KAAK,KAAK,EAAE;IAEhD,MAAMF,WAAW,GAAGxD,QAAQ,CAACqH,YAAY,GAAG,CAAC,CAAC;IAC9C,IAAI,CAAC7D,WAAW,IAAIA,WAAW,CAACE,MAAM,KAAK,MAAM,EAAE;IAEnDjC,oBAAoB,CAAC4F,YAAY,CAAC;IAElC,IAAI;MACF,MAAM1E,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,aAAa,EAAE;QACpD4B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjB,UAAU,EAAE9C,SAAS;UACrBgE,OAAO,EAAEZ,WAAW,CAACC;QACvB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACF,QAAQ,EAAE;QACjB,MAAM4E,WAAW,GAAG,CAAC,GAAGvH,QAAQ,CAAC;QACjC,MAAMwH,iBAAiB,GAAGD,WAAW,CAACF,YAAY,CAAC;QAEnD,IAAI,CAACG,iBAAiB,CAAClD,YAAY,EAAE;UACnCkD,iBAAiB,CAAClD,YAAY,GAAG,CAACkD,iBAAiB,CAAC/D,IAAI,CAAC;UACzD+D,iBAAiB,CAACjD,WAAW,GAAG,CAAC;QACnC;QAEAiD,iBAAiB,CAAClD,YAAY,CAACmD,IAAI,CAAC5E,IAAI,CAACF,QAAQ,CAAC;QAClD6E,iBAAiB,CAACjD,WAAW,GAAGiD,iBAAiB,CAAClD,YAAY,CAACG,MAAM,GAAG,CAAC;QACzE+C,iBAAiB,CAAC/D,IAAI,GAAGZ,IAAI,CAACF,QAAQ;QAEtC1C,WAAW,CAACsH,WAAW,CAAC;;QAExB;QACA,MAAM3E,KAAK,CAAC,GAAGT,OAAO,sBAAsB,EAAE;UAC5C4B,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBjB,UAAU,EAAE9C,SAAS;YACrBJ,QAAQ,EAAEuH;UACZ,CAAC;QACH,CAAC,CAAC;MAEJ;IACF,CAAC,CAAC,OAAOxE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRtB,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMiG,oBAAoB,GAAGA,CAACL,YAAY,EAAEM,SAAS,KAAK;IACxD,MAAMJ,WAAW,GAAG,CAAC,GAAGvH,QAAQ,CAAC;IACjC,MAAMoE,OAAO,GAAGmD,WAAW,CAACF,YAAY,CAAC;IAEzC,IAAI,CAACjD,OAAO,CAACE,YAAY,IAAIF,OAAO,CAACE,YAAY,CAACG,MAAM,IAAI,CAAC,EAAE;IAE/D,IAAImD,QAAQ,GAAGxD,OAAO,CAACG,WAAW,GAAGoD,SAAS;;IAE9C;IACA,IAAIC,QAAQ,GAAG,CAAC,EAAE;MAChBA,QAAQ,GAAGxD,OAAO,CAACE,YAAY,CAACG,MAAM,GAAG,CAAC;IAC5C,CAAC,MAAM,IAAImD,QAAQ,IAAIxD,OAAO,CAACE,YAAY,CAACG,MAAM,EAAE;MAClDmD,QAAQ,GAAG,CAAC;IACd;IAEAxD,OAAO,CAACG,WAAW,GAAGqD,QAAQ;IAC9BxD,OAAO,CAACX,IAAI,GAAGW,OAAO,CAACE,YAAY,CAACsD,QAAQ,CAAC;IAE7C3H,WAAW,CAACsH,WAAW,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMM,aAAa,GAAGA,CAACzD,OAAO,EAAE0D,KAAK,KAAK;IACxC,IAAI1D,OAAO,CAACV,MAAM,KAAK,KAAK,EAAE;MAC5B,MAAMqE,eAAe,GAAG3D,OAAO,CAACE,YAAY,IAAIF,OAAO,CAACE,YAAY,CAACG,MAAM,GAAG,CAAC;MAC/E,MAAMuD,YAAY,GAAG5D,OAAO,CAACG,WAAW,IAAI,CAAC;MAC7C,MAAM0D,iBAAiB,GAAG7D,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACE,YAAY,CAACG,MAAM,GAAG,CAAC;MAEhF,oBACE7E,OAAA;QAAKsI,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCvI,OAAA;UAAKsI,SAAS,EAAE,mBAAmB9D,OAAO,CAACC,OAAO,GAAG,OAAO,GAAG,EAAE,EAAG;UAAA8D,QAAA,eAClEvI,OAAA,CAACF,aAAa;YAAAyI,QAAA,EAAE/D,OAAO,CAACX;UAAI;YAAAwC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB;QAAC;UAAArC,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACN1I,OAAA;UAAKsI,SAAS,EAAC,sBAAsB;UAAAC,QAAA,GAClCJ,eAAe,iBACdnI,OAAA;YAAKsI,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtCvI,OAAA;cACEsI,SAAS,EAAC,SAAS;cACnBK,OAAO,EAAEA,CAAA,KAAMb,oBAAoB,CAACI,KAAK,EAAE,CAAC,CAAC,CAAE;cAC/CxB,KAAK,EAAC,sBAAsB;cAAA6B,QAAA,EAC7B;YAED;cAAAlC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT1I,OAAA;cAAMsI,SAAS,EAAC,sBAAsB;cAAAC,QAAA,GACnCH,YAAY,GAAG,CAAC,EAAC,KAAG,EAACC,iBAAiB;YAAA;cAAAhC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC,eACP1I,OAAA;cACEsI,SAAS,EAAC,SAAS;cACnBK,OAAO,EAAEA,CAAA,KAAMb,oBAAoB,CAACI,KAAK,EAAE,CAAC,CAAE;cAC9CxB,KAAK,EAAC,kBAAkB;cAAA6B,QAAA,EACzB;YAED;cAAAlC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAArC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,eACD1I,OAAA;YACEsI,SAAS,EAAC,gBAAgB;YAC1BK,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACU,KAAK,CAAE;YACvCU,QAAQ,EAAEhH,iBAAiB,KAAKsG,KAAM;YACtCxB,KAAK,EAAC,qBAAqB;YAAA6B,QAAA,EAE1B3G,iBAAiB,KAAKsG,KAAK,GAAG,GAAG,GAAG;UAAI;YAAA7B,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAArC,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAArC,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV,CAAC,MAAM;MACL,oBACE1I,OAAA;QAAKsI,SAAS,EAAE,mBAAmB9D,OAAO,CAACC,OAAO,GAAG,OAAO,GAAG,EAAE,EAAG;QAAA8D,QAAA,EACjE/D,OAAO,CAACX;MAAI;QAAAwC,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAEV;EACF,CAAC;EAED,oBACE1I,OAAA;IAAKsI,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5BvI,OAAA;MAAKsI,SAAS,EAAE,WAAW1H,aAAa,GAAG,MAAM,GAAG,QAAQ,EAAG;MAAA2H,QAAA,gBAC7DvI,OAAA;QAAQsI,SAAS,EAAC,cAAc;QAACK,OAAO,EAAEtF,kBAAmB;QAAAkF,QAAA,EAAC;MAE9D;QAAAlC,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT1I,OAAA;QAAKsI,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BvH,QAAQ,CAAC6E,GAAG,CAAEM,OAAO,iBACpBnG,OAAA;UAEEsI,SAAS,EAAE,gBAAgBnC,OAAO,CAAC7C,UAAU,KAAK9C,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAA+H,QAAA,EAE7EjH,gBAAgB,KAAK6E,OAAO,CAAC7C,UAAU,gBACtCtD,OAAA;YAAKsI,SAAS,EAAC,cAAc;YAACK,OAAO,EAAGlF,CAAC,IAAKA,CAAC,CAACoF,eAAe,CAAC,CAAE;YAAAN,QAAA,gBAChEvI,OAAA;cACE8I,IAAI,EAAC,MAAM;cACXC,KAAK,EAAEvH,YAAa;cACpBwH,QAAQ,EAAGvF,CAAC,IAAKhC,eAAe,CAACgC,CAAC,CAACwC,MAAM,CAAC8C,KAAK,CAAE;cACjDE,SAAS,EAAGxF,CAAC,IAAK;gBAChBA,CAAC,CAACoF,eAAe,CAAC,CAAC;gBACnB,IAAIpF,CAAC,CAACyF,GAAG,KAAK,OAAO,EAAE;kBACrBvC,SAAS,CAACR,OAAO,CAAC7C,UAAU,CAAC;gBAC/B,CAAC,MAAM,IAAIG,CAAC,CAACyF,GAAG,KAAK,QAAQ,EAAE;kBAC7BpC,aAAa,CAAC,CAAC;gBACjB;cACF,CAAE;cACFqC,MAAM,EAAEA,CAAA,KAAMrC,aAAa,CAAC,CAAE;cAC9BwB,SAAS,EAAC,qBAAqB;cAC/Bc,SAAS;YAAA;cAAA/C,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACF1I,OAAA;cAAKsI,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCvI,OAAA;gBACE2I,OAAO,EAAGlF,CAAC,IAAK;kBACdA,CAAC,CAACoF,eAAe,CAAC,CAAC;kBACnBlC,SAAS,CAACR,OAAO,CAAC7C,UAAU,CAAC;gBAC/B,CAAE;gBAAAiF,QAAA,EACH;cAED;gBAAAlC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT1I,OAAA;gBACE2I,OAAO,EAAGlF,CAAC,IAAK;kBACdA,CAAC,CAACoF,eAAe,CAAC,CAAC;kBACnB/B,aAAa,CAAC,CAAC;gBACjB,CAAE;gBAAAyB,QAAA,EACH;cAED;gBAAAlC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAArC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAArC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAEN1I,OAAA;YACEsI,SAAS,EAAC,iBAAiB;YAC3BK,OAAO,EAAEA,CAAA,KAAMzC,aAAa,CAACC,OAAO,CAAE;YAAAoC,QAAA,gBAEtCvI,OAAA;cAAKsI,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEpC,OAAO,CAACO;YAAK;cAAAL,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpD1I,OAAA;cAAKsI,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEtB,UAAU,CAACd,OAAO,CAACkD,YAAY;YAAC;cAAAhD,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtE1I,OAAA;cAAKsI,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9BvI,OAAA;gBACEsI,SAAS,EAAC,6BAA6B;gBACvCK,OAAO,EAAGlF,CAAC,IAAK;kBACdA,CAAC,CAACoF,eAAe,CAAC,CAAC;kBACnBpC,iBAAiB,CAACN,OAAO,CAAC;gBAC5B,CAAE;gBAAAoC,QAAA,EACH;cAED;gBAAAlC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT1I,OAAA;gBACEsI,SAAS,EAAC,+BAA+B;gBACzCK,OAAO,EAAGlF,CAAC,IAAK;kBACdA,CAAC,CAACoF,eAAe,CAAC,CAAC;kBACnB9B,aAAa,CAACZ,OAAO,CAAC7C,UAAU,CAAC;gBACnC,CAAE;gBAAAiF,QAAA,EACH;cAED;gBAAAlC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAArC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAArC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QACN,GApEIvC,OAAO,CAAC7C,UAAU;UAAA+C,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqEpB,CACN;MAAC;QAAArC,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAArC,QAAA,EAAAmC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN1I,OAAA;MAAKsI,SAAS,EAAE,gBAAgB1H,aAAa,GAAG,EAAE,GAAG,gBAAgB,EAAG;MAAA2H,QAAA,gBACtEvI,OAAA;QAAKsI,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BvI,OAAA;UACEsI,SAAS,EAAC,gBAAgB;UAC1BK,OAAO,EAAEA,CAAA,KAAM9H,gBAAgB,CAAC,CAACD,aAAa,CAAE;UAAA2H,QAAA,EACjD;QAED;UAAAlC,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1I,OAAA;UAAMsI,SAAS,EAAC,YAAY;UAAAC,QAAA,EACzB,EAAApI,cAAA,GAAAa,QAAQ,CAACsI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjG,UAAU,KAAK9C,SAAS,CAAC,cAAAL,cAAA,uBAA9CA,cAAA,CAAgDuG,KAAK,KAAI,YAAY,CAAAlG,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEgJ,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAI,SAAS;QAAK;UAAAnD,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9G,CAAC;MAAA;QAAArC,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEN1I,OAAA;QAAKsI,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BvI,OAAA;UAAKsI,SAAS,EAAC,oBAAoB;UAAAC,QAAA,GAChCnI,QAAQ,CAACyF,GAAG,CAAC,CAACrB,OAAO,EAAE0D,KAAK,kBAC3BlI,OAAA;YAAiBsI,SAAS,EAAE,WAAW9D,OAAO,CAACV,MAAM,EAAG;YAAAyE,QAAA,EACrDN,aAAa,CAACzD,OAAO,EAAE0D,KAAK;UAAC,GADtBA,KAAK;YAAA7B,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN,CAAC,EACDhI,SAAS,iBACRV,OAAA;YAAKsI,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC1BvI,OAAA;cAAKsI,SAAS,EAAC,yBAAyB;cAAAC,QAAA,eACtCvI,OAAA;gBAAKsI,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC/BvI,OAAA;kBAAAqG,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACb1I,OAAA;kBAAAqG,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACb1I,OAAA;kBAAAqG,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC;cAAA;gBAAArC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV;YAAC;cAAArC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAArC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eACD1I,OAAA;YAAKyJ,GAAG,EAAEnH;UAAW;YAAA+D,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAArC,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,EAGL5H,cAAc,iBACbd,OAAA;UAAKsI,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BvI,OAAA;YAAKsI,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCvI,OAAA;cAAKsI,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9BvI,OAAA;gBAAAuI,QAAA,EAAI;cAAwB;gBAAAlC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjC1I,OAAA;gBACEsI,SAAS,EAAC,WAAW;gBACrBK,OAAO,EAAEA,CAAA,KAAM5H,iBAAiB,CAAC,KAAK,CAAE;gBAAAwH,QAAA,EACzC;cAED;gBAAAlC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAArC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAGN1I,OAAA;cAAKsI,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACrCvI,OAAA;gBAAAuI,QAAA,GAAI,kBAAgB,EAAC7G,aAAa,CAACmD,MAAM,EAAC,GAAC;cAAA;gBAAAwB,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChD1I,OAAA;gBAAKsI,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EACjC7G,aAAa,CAACmD,MAAM,GAAG,CAAC,GACvBnD,aAAa,CAACmE,GAAG,CAAC,CAAC6D,IAAI,EAAExB,KAAK,kBAC5BlI,OAAA;kBAAiBsI,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,gBAC7CvI,OAAA;oBAAMsI,SAAS,EAAC,WAAW;oBAAAC,QAAA,EAAEmB;kBAAI;oBAAArD,QAAA,EAAAmC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACzC1I,OAAA;oBACEsI,SAAS,EAAC,iBAAiB;oBAC3BK,OAAO,EAAEA,CAAA,KAAMvC,gBAAgB,CAACsD,IAAI,CAAE;oBACtChD,KAAK,EAAC,aAAa;oBAAA6B,QAAA,EACpB;kBAED;oBAAAlC,QAAA,EAAAmC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,GARDR,KAAK;kBAAA7B,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OASV,CACN,CAAC,gBAEF1I,OAAA;kBAAKsI,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAAC;gBAElC;kBAAAlC,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cACN;gBAAArC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAArC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAGN1I,OAAA;cAAKsI,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjCvI,OAAA;gBAAAuI,QAAA,EAAI;cAAgB;gBAAAlC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzB1I,OAAA;gBAAM2J,QAAQ,EAAE7E,iBAAkB;gBAAAyD,QAAA,gBAChCvI,OAAA;kBACE8I,IAAI,EAAC,MAAM;kBACXc,QAAQ;kBACRZ,QAAQ,EAAElD,gBAAiB;kBAC3BwC,SAAS,EAAC;gBAAY;kBAAAjC,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB,CAAC,eACF1I,OAAA;kBAAKsI,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAC5BxC,KAAK,CAACC,IAAI,CAAC5E,aAAa,CAAC,CAACyE,GAAG,CAAC,CAAC6D,IAAI,EAAExB,KAAK,kBACzClI,OAAA;oBAAiBsI,SAAS,EAAC,eAAe;oBAAAC,QAAA,gBACxCvI,OAAA;sBAAAuI,QAAA,EAAOmB,IAAI,CAACG;oBAAI;sBAAAxD,QAAA,EAAAmC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,eACxB1I,OAAA;sBACE8I,IAAI,EAAC,QAAQ;sBACbH,OAAO,EAAEA,CAAA,KAAM;wBACb,MAAMmB,QAAQ,GAAG/D,KAAK,CAACC,IAAI,CAAC5E,aAAa,CAAC,CAAC2I,MAAM,CAAC,CAACC,CAAC,EAAE9E,CAAC,KAAKA,CAAC,KAAKgD,KAAK,CAAC;wBACxE7G,gBAAgB,CAACyI,QAAQ,CAAC;sBAC5B,CAAE;sBACFxB,SAAS,EAAC,qBAAqB;sBAAAC,QAAA,EAChC;oBAED;sBAAAlC,QAAA,EAAAmC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA,GAXDR,KAAK;oBAAA7B,QAAA,EAAAmC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAYV,CACN;gBAAC;kBAAArC,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACN1I,OAAA;kBAAKsI,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BvI,OAAA;oBAAQ8I,IAAI,EAAC,QAAQ;oBAACH,OAAO,EAAEA,CAAA,KAAM5H,iBAAiB,CAAC,KAAK,CAAE;oBAAAwH,QAAA,EAAC;kBAE/D;oBAAAlC,QAAA,EAAAmC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACT1I,OAAA;oBAAQ8I,IAAI,EAAC,QAAQ;oBAACF,QAAQ,EAAExH,aAAa,CAACyD,MAAM,KAAK,CAAE;oBAAA0D,QAAA,GAAC,UAClD,EAACnH,aAAa,CAACyD,MAAM,EAAC,GAChC;kBAAA;oBAAAwB,QAAA,EAAAmC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAArC,QAAA,EAAAmC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAArC,QAAA,EAAAmC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAArC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAArC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAArC,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAGD1I,OAAA;UAAKsI,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BvI,OAAA;YACEsI,SAAS,EAAC,YAAY;YACtBK,OAAO,EAAEA,CAAA,KAAM5H,iBAAiB,CAAC,IAAI,CAAE;YAAAwH,QAAA,EACxC;UAED;YAAAlC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT1I,OAAA;YAAM2J,QAAQ,EAAEnG,iBAAkB;YAAC8E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvDvI,OAAA;cACE8I,IAAI,EAAC,MAAM;cACXC,KAAK,EAAEzI,KAAM;cACb0I,QAAQ,EAAGvF,CAAC,IAAKlD,QAAQ,CAACkD,CAAC,CAACwC,MAAM,CAAC8C,KAAK,CAAE;cAC1CkB,WAAW,EAAC,sBAAsB;cAClCrB,QAAQ,EAAElI,SAAU;cACpB4H,SAAS,EAAC;YAAe;cAAAjC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACF1I,OAAA;cACE8I,IAAI,EAAC,QAAQ;cACbF,QAAQ,EAAE,CAACtI,KAAK,CAACqD,IAAI,CAAC,CAAC,IAAIjD,SAAU;cACrC4H,SAAS,EAAC,UAAU;cAAAC,QAAA,EACrB;YAED;cAAAlC,QAAA,EAAAmC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAArC,QAAA,EAAAmC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAArC,QAAA,EAAAmC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAArC,QAAA,EAAAmC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAArC,QAAA,EAAAmC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAArC,QAAA,EAAAmC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxI,EAAA,CA7rBQD,GAAG;AAAAiK,EAAA,GAAHjK,GAAG;AA+rBZ,eAAeA,GAAG;AAAC,IAAAiK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}