{"ast":null,"code":"var _jsxFileName = \"/home/sujalnath/dev/projects/rag-chatbot/rag-chatbot-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Check if files have been uploaded for this session\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages([...messages, userMessage, {\n          text: data.error,\n          sender: 'bot',\n          isError: true\n        }]);\n      } else if (data.response) {\n        setMessages([...messages, userMessage, {\n          text: data.response,\n          sender: 'bot'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, {\n        text: 'An error occurred. Please try again later.',\n        sender: 'bot',\n        isError: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUploadFiles = async e => {\n    e.preventDefault();\n    if (selectedFiles.length === 0) return;\n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFiles([...files, ...selectedFiles]);\n        setSelectedFiles([]);\n        setIsUploaderOpen(false);\n        setMessages([...messages, {\n          text: `Successfully uploaded ${selectedFiles.length} file(s).`,\n          sender: 'system'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, {\n        text: 'Failed to upload files. Please try again.',\n        sender: 'system',\n        isError: true\n      }]);\n    }\n  };\n  const fetchChatHistory = async sessId => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.history) {\n        // Convert the API response to our message format\n        const formattedMessages = [];\n        for (let i = 0; i < data.history.length; i += 2) {\n          if (i + 1 < data.history.length) {\n            formattedMessages.push({\n              text: data.history[i].content,\n              sender: 'user'\n            });\n            formattedMessages.push({\n              text: data.history[i + 1].content,\n              sender: 'bot'\n            });\n          }\n        }\n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFileSelect = e => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n  const switchSession = id => {\n    setSessionId(id);\n    setMessages([]);\n    fetchChatHistory(id);\n    // In a complete implementation, you would fetch the chat history for this session\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        onClick: generateNewSession,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-list\",\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `session-item ${session === sessionId ? 'active' : ''}`,\n          onClick: () => switchSession(session),\n          children: [\"Session \", session.substring(0, 8), \"...\"]\n        }, session, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"session-id\",\n          children: [\"Session: \", sessionId.substring(0, 8), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-content ${message.isError ? 'error' : ''}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content loading\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), isUploaderOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploader-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploader-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUploadFiles,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                multiple: true,\n                onChange: handleFileSelect,\n                className: \"file-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-files\",\n                children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-file\",\n                  children: file.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploader-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setIsUploaderOpen(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: selectedFiles.length === 0,\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => setIsUploaderOpen(true),\n            children: \"\\uD83D\\uDCCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"input-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: \"Type your message...\",\n              disabled: isLoading,\n              className: \"message-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !input.trim() || isLoading,\n              className: \"send-btn\",\n              children: \"\\u21B5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F835oZPibUgGuLN2O7OHXGI78PU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","sessionId","setSessionId","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","isUploaderOpen","setIsUploaderOpen","sessions","setSessions","files","setFiles","selectedFiles","setSelectedFiles","chatEndRef","API_URL","fetchSessions","generateNewSession","scrollToBottom","_chatEndRef$current","current","scrollIntoView","behavior","response","fetch","data","json","error","console","session_id","handleSendMessage","e","preventDefault","trim","userMessage","text","sender","method","headers","body","JSON","stringify","message","isError","handleUploadFiles","length","formData","FormData","append","i","success","fetchChatHistory","sessId","history","formattedMessages","push","content","handleFileSelect","Array","from","target","switchSession","id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","session","substring","index","ref","onSubmit","type","multiple","onChange","file","name","disabled","value","placeholder","_c","$RefreshReg$"],"sources":["/home/sujalnath/dev/projects/rag-chatbot/rag-chatbot-frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!input.trim()) return;\n    \n    // Check if files have been uploaded for this session\n    const userMessage = { text: input, sender: 'user' };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input,\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (data.error) {\n        setMessages([...messages, userMessage, { text: data.error, sender: 'bot', isError: true }]);\n      } else if (data.response) {\n        setMessages([...messages, userMessage, { text: data.response, sender: 'bot' }]);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, { \n        text: 'An error occurred. Please try again later.', \n        sender: 'bot', \n        isError: true \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUploadFiles = async (e) => {\n    e.preventDefault();\n    \n    if (selectedFiles.length === 0) return;\n    \n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    \n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    \n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setFiles([...files, ...selectedFiles]);\n        setSelectedFiles([]);\n        setIsUploaderOpen(false);\n        setMessages([...messages, { \n          text: `Successfully uploaded ${selectedFiles.length} file(s).`, \n          sender: 'system' \n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, { \n        text: 'Failed to upload files. Please try again.', \n        sender: 'system', \n        isError: true \n      }]);\n    }\n  };\n\n  const fetchChatHistory = async (sessId) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      \n      if (data.history) {\n        // Convert the API response to our message format\n        const formattedMessages = [];\n        for (let i = 0; i < data.history.length; i += 2) {\n          if (i + 1 < data.history.length) {\n            formattedMessages.push({ \n              text: data.history[i].content, \n              sender: 'user' \n            });\n            formattedMessages.push({ \n              text: data.history[i + 1].content, \n              sender: 'bot' \n            });\n          }\n        }\n        \n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n\n  const switchSession = (id) => {\n    setSessionId(id);\n    setMessages([]);\n    fetchChatHistory(id);\n    // In a complete implementation, you would fetch the chat history for this session\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Sidebar */}\n      <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n        <button className=\"new-chat-btn\" onClick={generateNewSession}>\n          New Chat\n        </button>\n        <div className=\"sessions-list\">\n          {sessions.map((session) => (\n            <div \n              key={session} \n              className={`session-item ${session === sessionId ? 'active' : ''}`}\n              onClick={() => switchSession(session)}\n            >\n              Session {session.substring(0, 8)}...\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className={`main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`}>\n        <div className=\"chat-header\">\n          <button \n            className=\"sidebar-toggle\" \n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n          >\n            ☰\n          </button>\n          <span className=\"session-id\">Session: {sessionId.substring(0, 8)}...</span>\n        </div>\n\n        <div className=\"chat-container\">\n          <div className=\"messages-container\">\n            {messages.map((message, index) => (\n              <div key={index} className={`message ${message.sender}`}>\n                <div className={`message-content ${message.isError ? 'error' : ''}`}>\n                  {message.text}\n                </div>\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"message bot\">\n                <div className=\"message-content loading\">\n                  <div className=\"typing-indicator\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={chatEndRef} />\n          </div>\n\n          {/* File Uploader Dialog */}\n          {isUploaderOpen && (\n            <div className=\"uploader-overlay\">\n              <div className=\"uploader-container\">\n                <h3>Upload Files</h3>\n                <form onSubmit={handleUploadFiles}>\n                  <input \n                    type=\"file\" \n                    multiple \n                    onChange={handleFileSelect} \n                    className=\"file-input\"\n                  />\n                  <div className=\"selected-files\">\n                    {Array.from(selectedFiles).map((file, index) => (\n                      <div key={index} className=\"selected-file\">\n                        {file.name}\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"uploader-actions\">\n                    <button type=\"button\" onClick={() => setIsUploaderOpen(false)}>\n                      Cancel\n                    </button>\n                    <button type=\"submit\" disabled={selectedFiles.length === 0}>\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n\n          {/* Input Area */}\n          <div className=\"input-container\">\n            <button \n              className=\"upload-btn\" \n              onClick={() => setIsUploaderOpen(true)}\n            >\n              📎\n            </button>\n            <form onSubmit={handleSendMessage} className=\"input-form\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type your message...\"\n                disabled={isLoading}\n                className=\"message-input\"\n              />\n              <button \n                type=\"submit\" \n                disabled={!input.trim() || isLoading}\n                className=\"send-btn\"\n              >\n                ↵\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}