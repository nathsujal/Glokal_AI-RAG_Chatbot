{"ast":null,"code":"var _jsxFileName = \"/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _sessions$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [regenerationCounts, setRegenerationCounts] = useState({});\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [regeneratingIndex, setRegeneratingIndex] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isInputDisabled, setIsInputDisabled] = useState(true);\n  const [tooltipVisible, setToolTipVisible] = useState(false);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n  }, []);\n\n  // To load uploaded files when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchUploadedFiles(sessionId);\n    }\n  }, [sessionId]);\n\n  // Update input disabled state when uploadedFiles changes\n  useEffect(() => {\n    setIsInputDisabled(uploadedFiles.length === 0);\n  }, [uploadedFiles]);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      setUploadedFiles([]);\n      fetchSessions();\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      id: Date.now() + '_user' // Simple ID generation\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages([...messages, userMessage, {\n          text: data.error,\n          sender: 'bot',\n          isError: true,\n          id: Date.now() + '_bot_error'\n        }]);\n      } else if (data.response) {\n        setMessages([...messages, userMessage, {\n          text: data.response,\n          sender: 'bot',\n          id: Date.now() + '_bot'\n        }]);\n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, {\n        text: 'An error occurred. Please try again later.',\n        sender: 'bot',\n        isError: true,\n        id: Date.now() + '_bot_error'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // To refresh the uploaded files list\n  const handleUploadFiles = async e => {\n    e.preventDefault();\n    if (selectedFiles.length === 0) {\n      alert('Please select files to upload');\n      return;\n    }\n    if (!sessionId) {\n      alert('No session selected. Please create a new session first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n\n    // Append each file\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n      console.log(`Adding file: ${selectedFiles[i].name}`);\n    }\n    try {\n      setIsUploading(true);\n      console.log(`Uploading ${selectedFiles.length} files for session: ${sessionId}`);\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      console.log(`Upload response status: ${response.status}`);\n      const data = await response.json();\n      console.log('Upload response data:', data);\n      if (data.success) {\n        var _data$uploaded_files, _data$failed_files;\n        setSelectedFiles([]);\n        // Refresh processed sources and uploaded files\n        fetchUploadedFiles(sessionId);\n        const uploadedCount = ((_data$uploaded_files = data.uploaded_files) === null || _data$uploaded_files === void 0 ? void 0 : _data$uploaded_files.length) || 0;\n        const failedCount = ((_data$failed_files = data.failed_files) === null || _data$failed_files === void 0 ? void 0 : _data$failed_files.length) || 0;\n        let message = `Successfully uploaded ${uploadedCount} file(s)`;\n        if (failedCount > 0) {\n          message += `. Failed: ${data.failed_files.join(', ')}`;\n        }\n        setMessages(prev => [...prev, {\n          text: message,\n          sender: 'system',\n          id: Date.now() + '_system'\n        }]);\n      } else {\n        const errorFiles = data.failed_files ? data.failed_files.join(', ') : 'some files';\n        setMessages(prev => [...prev, {\n          text: `Failed to upload ${errorFiles}`,\n          sender: 'system',\n          isError: true,\n          id: Date.now() + '_system_error'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages(prev => [...prev, {\n        text: 'Failed to upload files. Please try again.',\n        sender: 'system',\n        isError: true,\n        id: Date.now() + '_system_error'\n      }]);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const fetchChatHistory = async sessId => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.history && data.history.length > 0) {\n        const formattedMessages = data.history.map(message => ({\n          text: message.alternatives && message.alternatives.length > 0 ? message.alternatives[message.active_index] : message.content,\n          sender: message.type === 'HumanMessage' ? 'user' : 'bot',\n          id: message.id,\n          alternatives: message.alternatives || [],\n          activeIndex: message.active_index || 0\n        }));\n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFileSelect = e => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n  const switchSession = session => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n    fetchUploadedFiles(session.session_id);\n  };\n\n  // Fetch uploaded files in each session to show them up later\n  const fetchUploadedFiles = async sessId => {\n    try {\n      const response = await fetch(`${API_URL}/uploaded_files?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.files) {\n        setUploadedFiles(data.files);\n      } else {\n        setUploadedFiles([]);\n      }\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n      setUploadedFiles([]);\n    }\n  };\n\n  // Delete Uploaded Files\n  const handleDeleteFile = async fileName => {\n    if (!window.confirm(`Are you sure you want to delete \"${fileName}\"?`)) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/delete_file`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          filename: fileName\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Refresh the uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, {\n          text: `Successfully deleted \"${fileName}\".`,\n          sender: 'system'\n        }]);\n      } else {\n        setMessages([...messages, {\n          text: `Failed to delete \"${fileName}\". ${data.error || ''}`,\n          sender: 'system',\n          isError: true\n        }]);\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setMessages([...messages, {\n        text: `Failed to delete \"${fileName}\". Please try again.`,\n        sender: 'system',\n        isError: true\n      }]);\n    }\n  };\n\n  // Edit the chat name (or session name)\n  const startEditingTitle = session => {\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n\n  // Save the session name\n  const saveTitle = async sessionId => {\n    try {\n      const response = await fetch(`${API_URL}/update_session_title`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          new_title: editingTitle\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      } else {\n        console.error('Failed to update title:', data.error || 'Unknown error');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n  const cancelEditing = () => {\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n  const deleteSession = async sessionIdToDelete => {\n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch {\n      return '';\n    }\n  };\n\n  // Regenerate response\n  const handleRegenerate = async messageIndex => {\n    const botMessage = messages[messageIndex];\n    if (!botMessage || botMessage.sender !== 'bot') return;\n    const userMessage = messages[messageIndex - 1];\n    if (!userMessage || userMessage.sender !== 'user') return;\n\n    // Check regeneration limit\n    const currentCount = botMessage.regeneration_count || 0;\n    if (currentCount >= 3) {\n      alert('Maximum regeneration limit (3) reached for this response');\n      return;\n    }\n    setRegeneratingIndex(messageIndex);\n    try {\n      const response = await fetch(`${API_URL}/regenerate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: userMessage.text\n        })\n      });\n      const data = await response.json();\n      if (data.response) {\n        const newMessages = [...messages];\n        const currentBotMessage = newMessages[messageIndex];\n        if (!currentBotMessage.alternatives) {\n          currentBotMessage.alternatives = [currentBotMessage.text];\n          currentBotMessage.activeIndex = 0;\n        }\n        currentBotMessage.alternatives.push(data.response);\n        currentBotMessage.activeIndex = currentBotMessage.alternatives.length - 1;\n        currentBotMessage.text = data.response;\n        currentBotMessage.regeneration_count = data.regeneration_count;\n        setMessages(newMessages);\n      }\n    } catch (error) {\n      console.error('Error regenerating response:', error);\n    } finally {\n      setRegeneratingIndex(null);\n    }\n  };\n\n  // Move through responses\n  const navigateAlternatives = (messageIndex, direction) => {\n    const newMessages = [...messages];\n    const message = newMessages[messageIndex];\n    if (!message.alternatives || message.alternatives.length <= 1) return;\n    let newIndex = message.activeIndex + direction;\n\n    // Wrap around\n    if (newIndex < 0) {\n      newIndex = message.alternatives.length - 1;\n    } else if (newIndex >= message.alternatives.length) {\n      newIndex = 0;\n    }\n    message.activeIndex = newIndex;\n    message.text = message.alternatives[newIndex];\n    setMessages(newMessages);\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = (message, index) => {\n    if (message.sender === 'bot') {\n      const hasAlternatives = message.alternatives && message.alternatives.length > 1;\n      const currentIndex = message.activeIndex || 0;\n      const totalAlternatives = message.alternatives ? message.alternatives.length : 1;\n      const regenerationCount = message.regeneration_count || 0;\n      const canRegenerate = regenerationCount < 3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-content ${message.isError ? 'error' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-message-controls\",\n          children: [hasAlternatives && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alternatives-navigation\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-btn\",\n              onClick: () => navigateAlternatives(index, -1),\n              title: \"Previous alternative\",\n              children: \"\\u2190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alternatives-counter\",\n              children: [currentIndex + 1, \" / \", totalAlternatives]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nav-btn\",\n              onClick: () => navigateAlternatives(index, 1),\n              title: \"Next alternative\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"regenerate-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"regenerate-btn\",\n              onClick: () => handleRegenerate(index),\n              disabled: regeneratingIndex === index || !canRegenerate,\n              title: canRegenerate ? \"Regenerate response\" : \"Maximum regenerations reached\",\n              children: regeneratingIndex === index ? '⟳' : '🔄'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this), regenerationCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"regeneration-count\",\n              children: [regenerationCount, \"/3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-content ${message.isError ? 'error' : ''}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        onClick: generateNewSession,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-chat-icon\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-list\",\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `session-item ${session.session_id === sessionId ? 'active' : ''}`,\n          children: editingSessionId === session.session_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-edit\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingTitle,\n              onChange: e => setEditingTitle(e.target.value),\n              onKeyDown: e => {\n                e.stopPropagation();\n                if (e.key === 'Enter') {\n                  saveTitle(session.session_id);\n                } else if (e.key === 'Escape') {\n                  cancelEditing();\n                }\n              },\n              onBlur: () => cancelEditing(),\n              className: \"session-title-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-edit-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  saveTitle(session.session_id);\n                },\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  cancelEditing();\n                },\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-content\",\n            onClick: () => switchSession(session),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-icon\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-title\",\n                children: session.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-date\",\n                children: formatDate(session.last_updated)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn edit-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  startEditingTitle(session);\n                },\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn delete-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteSession(session.session_id);\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 17\n          }, this)\n        }, session.session_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hamburger-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"session-name\",\n          children: ((_sessions$find = sessions.find(s => s.session_id === sessionId)) === null || _sessions$find === void 0 ? void 0 : _sessions$find.title) || \"Untitled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-logo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"GlokalAI-LOGO.png\",\n                alt: \"Glokal AI\",\n                className: \"logo-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload documents to get started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: message.sender === 'user' ? '👤' : '🤖'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content-container\",\n              children: renderMessage(message, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content loading\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this), isUploaderOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploader-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploader-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploader-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Upload Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"close-btn\",\n                onClick: () => setIsUploaderOpen(false),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uploaded-files-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Uploaded Files (\", uploadedFiles.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploaded-files-list\",\n                children: uploadedFiles.length > 0 ? uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploaded-file-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-icon\",\n                    children: file.status === 'ocr_processed' ? '🔍' : '📄'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-name\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-status\",\n                    children: file.status === 'ocr_processed' ? '(OCR Processed)' : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-file-btn\",\n                    onClick: () => handleDeleteFile(file.name),\n                    title: \"Delete file\",\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-files-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"empty-icon\",\n                    children: \"\\uD83D\\uDCC2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 25\n                  }, this), \"No files uploaded yet\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-new-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Upload New Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleUploadFiles,\n                className: \"upload-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"file-drop-area\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    multiple: true,\n                    onChange: handleFileSelect,\n                    className: \"file-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 712,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"drop-instructions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"upload-icon\",\n                      children: \"\\uD83D\\uDCE4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Click to browse or drag files here\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 720,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"file-types\",\n                      children: \"Supports PDF, TXT, DOCX\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 721,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-files\",\n                  children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"selected-file\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-icon\",\n                      children: \"\\uD83D\\uDCC4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 727,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: file.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => {\n                        const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                        setSelectedFiles(newFiles);\n                      },\n                      className: \"remove-selected-btn\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 729,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploader-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"cancel-btn\",\n                    onClick: () => setIsUploaderOpen(false),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"upload-action-btn\",\n                    disabled: selectedFiles.length === 0 || isUploading,\n                    children: isUploading ? 'Uploading...' : `Upload (${selectedFiles.length})`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          onMouseEnter: () => isInputDisabled && setToolTipVisible(true),\n          onMouseLeave: () => setToolTipVisible(false),\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"input-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"upload-btn\",\n              onClick: () => setIsUploaderOpen(true),\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9 17V11L7 13\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9 11L11 13\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M22 10V15C22 20 20 22 15 22H9C4 22 2 20 2 15V9C2 4 4 2 9 2H14\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M22 10H18C15 10 14 9 14 6V2L22 10Z\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: isInputDisabled ? \"Upload a file to enable chatting\" : \"Let Glokal AI know your thoughts...\",\n              disabled: isInputDisabled || isLoading,\n              className: `message-input ${isInputDisabled ? 'disabled' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isInputDisabled || !input.trim() || isLoading,\n              className: \"send-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M22 2L11 13\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M22 2L15 22L11 13L2 9L22 2Z\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"GlokalAI can make mistakes. Verify important information.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/xJj046KoTae1/BXbktiCgRDTrU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","_sessions$find","messages","setMessages","input","setInput","sessionId","setSessionId","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","isUploaderOpen","setIsUploaderOpen","sessions","setSessions","regenerationCounts","setRegenerationCounts","files","setFiles","selectedFiles","setSelectedFiles","editingSessionId","setEditingSessionId","editingTitle","setEditingTitle","uploadedFiles","setUploadedFiles","regeneratingIndex","setRegeneratingIndex","isUploading","setIsUploading","isInputDisabled","setIsInputDisabled","tooltipVisible","setToolTipVisible","chatEndRef","API_URL","fetchSessions","fetchUploadedFiles","length","scrollToBottom","_chatEndRef$current","current","scrollIntoView","behavior","response","fetch","data","json","error","console","generateNewSession","session_id","handleSendMessage","e","preventDefault","trim","userMessage","text","sender","id","Date","now","method","headers","body","JSON","stringify","message","isError","setTimeout","handleUploadFiles","alert","formData","FormData","append","i","log","name","status","success","_data$uploaded_files","_data$failed_files","uploadedCount","uploaded_files","failedCount","failed_files","join","prev","errorFiles","fetchChatHistory","sessId","history","formattedMessages","map","alternatives","active_index","content","type","activeIndex","handleFileSelect","Array","from","target","switchSession","session","handleDeleteFile","fileName","window","confirm","filename","startEditingTitle","title","saveTitle","new_title","cancelEditing","deleteSession","sessionIdToDelete","ok","formatDate","dateString","date","toLocaleDateString","toLocaleTimeString","hour","minute","handleRegenerate","messageIndex","botMessage","currentCount","regeneration_count","newMessages","currentBotMessage","push","navigateAlternatives","direction","newIndex","renderMessage","index","hasAlternatives","currentIndex","totalAlternatives","regenerationCount","canRegenerate","className","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","stopPropagation","value","onChange","onKeyDown","key","onBlur","autoFocus","last_updated","find","s","src","alt","ref","file","onSubmit","multiple","newFiles","filter","_","onMouseEnter","onMouseLeave","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","placeholder","_c","$RefreshReg$"],"sources":["/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [regenerationCounts, setRegenerationCounts] = useState({});\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [regeneratingIndex, setRegeneratingIndex] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isInputDisabled, setIsInputDisabled] = useState(true);\n  const [tooltipVisible, setToolTipVisible] = useState(false);\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n  }, []);\n\n  // To load uploaded files when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchUploadedFiles(sessionId);\n    }\n  }, [sessionId]);\n\n  // Update input disabled state when uploadedFiles changes\n  useEffect(() => {\n    setIsInputDisabled(uploadedFiles.length === 0);\n  }, [uploadedFiles]);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      setUploadedFiles([]);\n      fetchSessions();\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!input.trim()) return;\n    \n    const userMessage = { \n      text: input, \n      sender: 'user', \n      id: Date.now() + '_user' // Simple ID generation\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n  \n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input,\n        }),\n      });\n  \n      const data = await response.json();\n      \n      if (data.error) {\n        setMessages([...messages, userMessage, { \n          text: data.error, \n          sender: 'bot', \n          isError: true,\n          id: Date.now() + '_bot_error'\n        }]);\n      } else if (data.response) {\n        setMessages([...messages, userMessage, { \n          text: data.response, \n          sender: 'bot',\n          id: Date.now() + '_bot'\n        }]);\n        \n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, { \n        text: 'An error occurred. Please try again later.', \n        sender: 'bot', \n        isError: true,\n        id: Date.now() + '_bot_error'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // To refresh the uploaded files list\n  const handleUploadFiles = async (e) => {\n    e.preventDefault();\n    \n    if (selectedFiles.length === 0) {\n      alert('Please select files to upload');\n      return;\n    }\n    \n    if (!sessionId) {\n      alert('No session selected. Please create a new session first.');\n      return;\n    }\n    \n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    \n    // Append each file\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n      console.log(`Adding file: ${selectedFiles[i].name}`);\n    }\n    \n    try {\n      setIsUploading(true);\n      console.log(`Uploading ${selectedFiles.length} files for session: ${sessionId}`);\n      \n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n      \n      console.log(`Upload response status: ${response.status}`);\n      const data = await response.json();\n      console.log('Upload response data:', data);\n      \n      if (data.success) {\n        setSelectedFiles([]);\n        // Refresh processed sources and uploaded files\n        fetchUploadedFiles(sessionId);\n        \n        const uploadedCount = data.uploaded_files?.length || 0;\n        const failedCount = data.failed_files?.length || 0;\n        \n        let message = `Successfully uploaded ${uploadedCount} file(s)`;\n        if (failedCount > 0) {\n          message += `. Failed: ${data.failed_files.join(', ')}`;\n        }\n        \n        setMessages(prev => [...prev, { \n          text: message, \n          sender: 'system',\n          id: Date.now() + '_system'\n        }]);\n      } else {\n        const errorFiles = data.failed_files ? data.failed_files.join(', ') : 'some files';\n        setMessages(prev => [...prev, { \n          text: `Failed to upload ${errorFiles}`, \n          sender: 'system', \n          isError: true,\n          id: Date.now() + '_system_error'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages(prev => [...prev, { \n        text: 'Failed to upload files. Please try again.', \n        sender: 'system', \n        isError: true,\n        id: Date.now() + '_system_error'\n      }]);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const fetchChatHistory = async (sessId) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      \n      if (data.history && data.history.length > 0) {\n        const formattedMessages = data.history.map(message => ({\n          text: message.alternatives && message.alternatives.length > 0 \n            ? message.alternatives[message.active_index] \n            : message.content,\n          sender: message.type === 'HumanMessage' ? 'user' : 'bot',\n          id: message.id,\n          alternatives: message.alternatives || [],\n          activeIndex: message.active_index || 0\n        }));\n        \n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n\n  const switchSession = (session) => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n    fetchUploadedFiles(session.session_id);\n  };\n\n  // Fetch uploaded files in each session to show them up later\n  const fetchUploadedFiles = async (sessId) => {\n    try {\n      const response = await fetch(`${API_URL}/uploaded_files?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.files) {\n        setUploadedFiles(data.files);\n      } else {\n        setUploadedFiles([]);\n      }\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n      setUploadedFiles([]);\n    }\n  };\n\n  // Delete Uploaded Files\n  const handleDeleteFile = async (fileName) => {\n    if (!window.confirm(`Are you sure you want to delete \"${fileName}\"?`)) {\n      return;\n    }\n  \n    try {\n      const response = await fetch(`${API_URL}/delete_file`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          filename: fileName\n        }),\n      });\n  \n      const data = await response.json();\n      \n      if (data.success) {\n        // Refresh the uploaded files list\n        fetchUploadedFiles(sessionId);\n        setMessages([...messages, { \n          text: `Successfully deleted \"${fileName}\".`, \n          sender: 'system' \n        }]);\n      } else {\n        setMessages([...messages, { \n          text: `Failed to delete \"${fileName}\". ${data.error || ''}`, \n          sender: 'system', \n          isError: true \n        }]);\n      }\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      setMessages([...messages, { \n        text: `Failed to delete \"${fileName}\". Please try again.`, \n        sender: 'system', \n        isError: true \n      }]);\n    }\n  };\n\n  // Edit the chat name (or session name)\n  const startEditingTitle = (session) => {\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n\n  // Save the session name\n  const saveTitle = async (sessionId) => {\n    try {\n      const response = await fetch(`${API_URL}/update_session_title`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          new_title: editingTitle\n        }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      } else {\n        console.error('Failed to update title:', data.error || 'Unknown error');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n\n  const cancelEditing = () => {\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n\n  const deleteSession = async (sessionIdToDelete) => {\n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE',\n        });\n        \n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } catch {\n      return '';\n    }\n  };\n\n  // Regenerate response\n  const handleRegenerate = async (messageIndex) => {\n    const botMessage = messages[messageIndex];\n    if (!botMessage || botMessage.sender !== 'bot') return;\n    \n    const userMessage = messages[messageIndex - 1];\n    if (!userMessage || userMessage.sender !== 'user') return;\n  \n    // Check regeneration limit\n    const currentCount = botMessage.regeneration_count || 0;\n    if (currentCount >= 3) {\n      alert('Maximum regeneration limit (3) reached for this response');\n      return;\n    }\n  \n    setRegeneratingIndex(messageIndex);\n  \n    try {\n      const response = await fetch(`${API_URL}/regenerate`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: userMessage.text\n        })\n      });\n      \n      const data = await response.json();\n      \n      if (data.response) {\n        const newMessages = [...messages];\n        const currentBotMessage = newMessages[messageIndex];\n        \n        if (!currentBotMessage.alternatives) {\n          currentBotMessage.alternatives = [currentBotMessage.text];\n          currentBotMessage.activeIndex = 0;\n        }\n        \n        currentBotMessage.alternatives.push(data.response);\n        currentBotMessage.activeIndex = currentBotMessage.alternatives.length - 1;\n        currentBotMessage.text = data.response;\n        currentBotMessage.regeneration_count = data.regeneration_count;\n        \n        setMessages(newMessages);\n      }\n    } catch (error) {\n      console.error('Error regenerating response:', error);\n    } finally {\n      setRegeneratingIndex(null);\n    }\n  };\n\n  // Move through responses\n  const navigateAlternatives = (messageIndex, direction) => {\n    const newMessages = [...messages];\n    const message = newMessages[messageIndex];\n    \n    if (!message.alternatives || message.alternatives.length <= 1) return;\n    \n    let newIndex = message.activeIndex + direction;\n    \n    // Wrap around\n    if (newIndex < 0) {\n      newIndex = message.alternatives.length - 1;\n    } else if (newIndex >= message.alternatives.length) {\n      newIndex = 0;\n    }\n    \n    message.activeIndex = newIndex;\n    message.text = message.alternatives[newIndex];\n    \n    setMessages(newMessages);\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = (message, index) => {\n    if (message.sender === 'bot') {\n      const hasAlternatives = message.alternatives && message.alternatives.length > 1;\n      const currentIndex = message.activeIndex || 0;\n      const totalAlternatives = message.alternatives ? message.alternatives.length : 1;\n      const regenerationCount = message.regeneration_count || 0;\n      const canRegenerate = regenerationCount < 3;\n      \n      return (\n        <div className=\"bot-message-container\">\n          <div className={`message-content ${message.isError ? 'error' : ''}`}>\n            <ReactMarkdown>{message.text}</ReactMarkdown>\n          </div>\n          <div className=\"bot-message-controls\">\n            {hasAlternatives && (\n              <div className=\"alternatives-navigation\">\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => navigateAlternatives(index, -1)}\n                  title=\"Previous alternative\"\n                >\n                  ←\n                </button>\n                <span className=\"alternatives-counter\">\n                  {currentIndex + 1} / {totalAlternatives}\n                </span>\n                <button \n                  className=\"nav-btn\"\n                  onClick={() => navigateAlternatives(index, 1)}\n                  title=\"Next alternative\"\n                >\n                  →\n                </button>\n              </div>\n            )}\n            <div className=\"regenerate-section\">\n              <button \n                className=\"regenerate-btn\"\n                onClick={() => handleRegenerate(index)}\n                disabled={regeneratingIndex === index || !canRegenerate}\n                title={canRegenerate ? \"Regenerate response\" : \"Maximum regenerations reached\"}\n              >\n                {regeneratingIndex === index ? '⟳' : '🔄'}\n              </button>\n              {regenerationCount > 0 && (\n                <span className=\"regeneration-count\">\n                  {regenerationCount}/3\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`message-content ${message.isError ? 'error' : ''}`}>\n          {message.text}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Sidebar */}\n      <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n        <button className=\"new-chat-btn\" onClick={generateNewSession}>\n          <div className=\"new-chat-icon\">+</div>\n          <span>New Chat</span>\n        </button>\n        <div className=\"sessions-list\">\n          {sessions.map((session) => (\n            <div \n              key={session.session_id} \n              className={`session-item ${session.session_id === sessionId ? 'active' : ''}`}\n            >\n              {editingSessionId === session.session_id ? (\n                <div className=\"session-edit\" onClick={(e) => e.stopPropagation()}>\n                  <input\n                    type=\"text\"\n                    value={editingTitle}\n                    onChange={(e) => setEditingTitle(e.target.value)}\n                    onKeyDown={(e) => {\n                      e.stopPropagation();\n                      if (e.key === 'Enter') {\n                        saveTitle(session.session_id);\n                      } else if (e.key === 'Escape') {\n                        cancelEditing();\n                      }\n                    }}\n                    onBlur={() => cancelEditing()}\n                    className=\"session-title-input\"\n                    autoFocus\n                  />\n                  <div className=\"session-edit-buttons\">\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        saveTitle(session.session_id);\n                      }}\n                    >\n                      ✓\n                    </button>\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        cancelEditing();\n                      }}\n                    >\n                      ✕\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div \n                  className=\"session-content\"\n                  onClick={() => switchSession(session)}\n                >\n                  <div className=\"session-icon\">💬</div>\n                  <div className=\"session-info\">\n                    <div className=\"session-title\">{session.title}</div>\n                    <div className=\"session-date\">{formatDate(session.last_updated)}</div>\n                  </div>\n                  <div className=\"session-actions\">\n                    <button \n                      className=\"session-action-btn edit-btn\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEditingTitle(session);\n                      }}\n                    >\n                      ✏️\n                    </button>\n                    <button \n                      className=\"session-action-btn delete-btn\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        deleteSession(session.session_id);\n                      }}\n                    >\n                      🗑️\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className={`main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`}>\n        <div className=\"chat-header\">\n          <button \n            className=\"sidebar-toggle\" \n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n          >\n            <div className=\"hamburger-icon\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </button>\n          <span className=\"session-name\">\n          {sessions.find(s => s.session_id === sessionId)?.title || \"Untitled\"}\n          </span>\n        </div>\n\n        <div className=\"chat-container\">\n          <div className=\"messages-container\">\n            {messages.length === 0 && (\n              <div className=\"welcome-message\">\n                <div className=\"header-logo\">\n                  <img src=\"GlokalAI-LOGO.png\" alt=\"Glokal AI\" className=\"logo-img\" />\n                </div>\n                <p>Upload documents to get started</p>\n              </div>\n            )}\n            \n            {messages.map((message, index) => (\n              <div key={index} className={`message ${message.sender}`}>\n                <div className=\"message-avatar\">\n                  {message.sender === 'user' ? '👤' : '🤖'}\n                </div>\n                <div className=\"message-content-container\">\n                  {renderMessage(message, index)}\n                </div>\n              </div>\n            ))}\n            \n            {isLoading && (\n              <div className=\"message bot\">\n                <div className=\"message-avatar\">🤖</div>\n                <div className=\"message-content-container\">\n                  <div className=\"message-content loading\">\n                    <div className=\"typing-indicator\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={chatEndRef} />\n          </div>\n\n          {/* File Uploader Dialog */}\n          {isUploaderOpen && (\n            <div className=\"uploader-overlay\">\n              <div className=\"uploader-container\">\n                <div className=\"uploader-header\">\n                  <h3>Upload Files</h3>\n                  <button \n                    className=\"close-btn\"\n                    onClick={() => setIsUploaderOpen(false)}\n                  >\n                    ×\n                  </button>\n                </div>\n                \n                {/* Uploaded Files Section */}\n                <div className=\"uploaded-files-section\">\n                  <h4>Uploaded Files ({uploadedFiles.length})</h4>\n                  <div className=\"uploaded-files-list\">\n                    {uploadedFiles.length > 0 ? (\n                      uploadedFiles.map((file, index) => (\n                        <div key={index} className=\"uploaded-file-item\">\n                          <span className=\"file-icon\">\n                            {file.status === 'ocr_processed' ? '🔍' : '📄'}\n                          </span>\n                          <span className=\"file-name\">{file.name}</span>\n                          <span className=\"file-status\">\n                            {file.status === 'ocr_processed' ? '(OCR Processed)' : ''}\n                          </span>\n                          <button \n                            className=\"delete-file-btn\"\n                            onClick={() => handleDeleteFile(file.name)}\n                            title=\"Delete file\"\n                          >\n                            🗑️\n                          </button>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"no-files-message\">\n                        <span className=\"empty-icon\">📂</span>\n                        No files uploaded yet\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Upload New Files Section */}\n                <div className=\"upload-new-section\">\n                  <h4>Upload New Files</h4>\n                  <form onSubmit={handleUploadFiles} className=\"upload-form\">\n                    <label className=\"file-drop-area\">\n                      <input \n                        type=\"file\" \n                        multiple \n                        onChange={handleFileSelect} \n                        className=\"file-input\"\n                      />\n                      <div className=\"drop-instructions\">\n                        <div className=\"upload-icon\">📤</div>\n                        <p>Click to browse or drag files here</p>\n                        <p className=\"file-types\">Supports PDF, TXT, DOCX</p>\n                      </div>\n                    </label>\n                    <div className=\"selected-files\">\n                      {Array.from(selectedFiles).map((file, index) => (\n                        <div key={index} className=\"selected-file\">\n                          <span className=\"file-icon\">📄</span>\n                          <span>{file.name}</span>\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              const newFiles = Array.from(selectedFiles).filter((_, i) => i !== index);\n                              setSelectedFiles(newFiles);\n                            }}\n                            className=\"remove-selected-btn\"\n                          >\n                            ×\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"uploader-actions\">\n                      <button type=\"button\" className=\"cancel-btn\" onClick={() => setIsUploaderOpen(false)}>\n                        Cancel\n                      </button>\n                      <button type=\"submit\" className=\"upload-action-btn\" disabled={selectedFiles.length === 0 || isUploading}>\n                        {isUploading ? 'Uploading...' : `Upload (${selectedFiles.length})`}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Input Area */}\n          <div\n            className=\"input-container\"\n            onMouseEnter={() => isInputDisabled && setToolTipVisible(true)}\n            onMouseLeave={() => setToolTipVisible(false)}\n          >\n            <form onSubmit={handleSendMessage} className=\"input-form\">\n              <button \n                className=\"upload-btn\" \n                onClick={() => setIsUploaderOpen(true)}\n                type=\"button\"\n              >\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                  <path d=\"M9 17V11L7 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M9 11L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M22 10V15C22 20 20 22 15 22H9C4 22 2 20 2 15V9C2 4 4 2 9 2H14\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M22 10H18C15 10 14 9 14 6V2L22 10Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </button>\n\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder={isInputDisabled ? \"Upload a file to enable chatting\" : \"Let Glokal AI know your thoughts...\"}\n                disabled={isInputDisabled || isLoading}\n                className={`message-input ${isInputDisabled ? 'disabled' : ''}`}\n              />\n              <button \n                type=\"submit\" \n                disabled={isInputDisabled || !input.trim() || isLoading}\n                className=\"send-btn\"\n              >\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                  <path d=\"M22 2L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n              </button>\n            </form>\n            <div className=\"input-footer\">\n              <p>GlokalAI can make mistakes. Verify important information.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACyC,cAAc,EAAEC,iBAAiB,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM2C,UAAU,GAAGzC,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM0C,OAAO,GAAG,uBAAuB,CAAC,CAAC;;EAEzC;EACA3C,SAAS,CAAC,MAAM;IACd4C,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5C,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,EAAE;MACbiC,kBAAkB,CAACjC,SAAS,CAAC;IAC/B;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACAZ,SAAS,CAAC,MAAM;IACduC,kBAAkB,CAACP,aAAa,CAACc,MAAM,KAAK,CAAC,CAAC;EAChD,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;;EAEnB;EACAhC,SAAS,CAAC,MAAM;IACd+C,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACvC,QAAQ,CAAC,CAAC;EAEd,MAAMuC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IAC3B,CAAAA,mBAAA,GAAAN,UAAU,CAACO,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMP,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,WAAW,CAAC;MACnD,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClClC,WAAW,CAACiC,IAAI,CAAClC,QAAQ,IAAI,EAAE,CAAC;IAClC,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,mBAAmB,CAAC;MAC3D,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC1C,YAAY,CAACyC,IAAI,CAACK,UAAU,CAAC;MAC7BlD,WAAW,CAAC,EAAE,CAAC;MACfwB,gBAAgB,CAAC,EAAE,CAAC;MACpBW,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMI,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACpD,KAAK,CAACqD,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAEvD,KAAK;MACXwD,MAAM,EAAE,MAAM;MACdC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;IAC3B,CAAC;IACD5D,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,CAAC,CAAC;IACvCrD,QAAQ,CAAC,EAAE,CAAC;IACZI,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMqC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,OAAO,EAAE;QAC9C2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBf,UAAU,EAAE/C,SAAS;UACrB+D,OAAO,EAAEjE;QACX,CAAC;MACH,CAAC,CAAC;MAEF,MAAM4C,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACd/C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,EAAE;UACrCC,IAAI,EAAEX,IAAI,CAACE,KAAK;UAChBU,MAAM,EAAE,KAAK;UACbU,OAAO,EAAE,IAAI;UACbT,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;QACnB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM,IAAIf,IAAI,CAACF,QAAQ,EAAE;QACxB3C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,EAAE;UACrCC,IAAI,EAAEX,IAAI,CAACF,QAAQ;UACnBc,MAAM,EAAE,KAAK;UACbC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI7D,QAAQ,CAACsC,MAAM,KAAK,CAAC,EAAE;UACzB+B,UAAU,CAACjC,aAAa,EAAE,GAAG,CAAC;QAChC;MACF;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C/C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEwD,WAAW,EAAE;QACrCC,IAAI,EAAE,4CAA4C;QAClDC,MAAM,EAAE,KAAK;QACbU,OAAO,EAAE,IAAI;QACbT,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;MACnB,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRtD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAM+D,iBAAiB,GAAG,MAAOjB,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIpC,aAAa,CAACoB,MAAM,KAAK,CAAC,EAAE;MAC9BiC,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;IAEA,IAAI,CAACnE,SAAS,EAAE;MACdmE,KAAK,CAAC,yDAAyD,CAAC;MAChE;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEtE,SAAS,CAAC;;IAExC;IACA,KAAK,IAAIuE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzD,aAAa,CAACoB,MAAM,EAAEqC,CAAC,EAAE,EAAE;MAC7CH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAExD,aAAa,CAACyD,CAAC,CAAC,CAAC;MAC1C1B,OAAO,CAAC2B,GAAG,CAAC,gBAAgB1D,aAAa,CAACyD,CAAC,CAAC,CAACE,IAAI,EAAE,CAAC;IACtD;IAEA,IAAI;MACFhD,cAAc,CAAC,IAAI,CAAC;MACpBoB,OAAO,CAAC2B,GAAG,CAAC,aAAa1D,aAAa,CAACoB,MAAM,uBAAuBlC,SAAS,EAAE,CAAC;MAEhF,MAAMwC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,SAAS,EAAE;QAChD2B,MAAM,EAAE,MAAM;QACdE,IAAI,EAAEQ;MACR,CAAC,CAAC;MAEFvB,OAAO,CAAC2B,GAAG,CAAC,2BAA2BhC,QAAQ,CAACkC,MAAM,EAAE,CAAC;MACzD,MAAMhC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCE,OAAO,CAAC2B,GAAG,CAAC,uBAAuB,EAAE9B,IAAI,CAAC;MAE1C,IAAIA,IAAI,CAACiC,OAAO,EAAE;QAAA,IAAAC,oBAAA,EAAAC,kBAAA;QAChB9D,gBAAgB,CAAC,EAAE,CAAC;QACpB;QACAkB,kBAAkB,CAACjC,SAAS,CAAC;QAE7B,MAAM8E,aAAa,GAAG,EAAAF,oBAAA,GAAAlC,IAAI,CAACqC,cAAc,cAAAH,oBAAA,uBAAnBA,oBAAA,CAAqB1C,MAAM,KAAI,CAAC;QACtD,MAAM8C,WAAW,GAAG,EAAAH,kBAAA,GAAAnC,IAAI,CAACuC,YAAY,cAAAJ,kBAAA,uBAAjBA,kBAAA,CAAmB3C,MAAM,KAAI,CAAC;QAElD,IAAI6B,OAAO,GAAG,yBAAyBe,aAAa,UAAU;QAC9D,IAAIE,WAAW,GAAG,CAAC,EAAE;UACnBjB,OAAO,IAAI,aAAarB,IAAI,CAACuC,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;QACxD;QAEArF,WAAW,CAACsF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAC5B9B,IAAI,EAAEU,OAAO;UACbT,MAAM,EAAE,QAAQ;UAChBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;QACnB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL,MAAM2B,UAAU,GAAG1C,IAAI,CAACuC,YAAY,GAAGvC,IAAI,CAACuC,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,YAAY;QAClFrF,WAAW,CAACsF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAC5B9B,IAAI,EAAE,oBAAoB+B,UAAU,EAAE;UACtC9B,MAAM,EAAE,QAAQ;UAChBU,OAAO,EAAE,IAAI;UACbT,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;QACnB,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C/C,WAAW,CAACsF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5B9B,IAAI,EAAE,2CAA2C;QACjDC,MAAM,EAAE,QAAQ;QAChBU,OAAO,EAAE,IAAI;QACbT,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;MACnB,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRhC,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAM4D,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACFnF,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMqC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,4BAA4BuD,MAAM,EAAE,CAAC;MAC5E,MAAM5C,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAAC6C,OAAO,IAAI7C,IAAI,CAAC6C,OAAO,CAACrD,MAAM,GAAG,CAAC,EAAE;QAC3C,MAAMsD,iBAAiB,GAAG9C,IAAI,CAAC6C,OAAO,CAACE,GAAG,CAAC1B,OAAO,KAAK;UACrDV,IAAI,EAAEU,OAAO,CAAC2B,YAAY,IAAI3B,OAAO,CAAC2B,YAAY,CAACxD,MAAM,GAAG,CAAC,GACzD6B,OAAO,CAAC2B,YAAY,CAAC3B,OAAO,CAAC4B,YAAY,CAAC,GAC1C5B,OAAO,CAAC6B,OAAO;UACnBtC,MAAM,EAAES,OAAO,CAAC8B,IAAI,KAAK,cAAc,GAAG,MAAM,GAAG,KAAK;UACxDtC,EAAE,EAAEQ,OAAO,CAACR,EAAE;UACdmC,YAAY,EAAE3B,OAAO,CAAC2B,YAAY,IAAI,EAAE;UACxCI,WAAW,EAAE/B,OAAO,CAAC4B,YAAY,IAAI;QACvC,CAAC,CAAC,CAAC;QAEH9F,WAAW,CAAC2F,iBAAiB,CAAC;MAChC,CAAC,MAAM;QACL3F,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC,CAAC,OAAO+C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD/C,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,SAAS;MACRM,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM4F,gBAAgB,GAAI9C,CAAC,IAAK;IAC9BlC,gBAAgB,CAACiF,KAAK,CAACC,IAAI,CAAChD,CAAC,CAACiD,MAAM,CAACtF,KAAK,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMuF,aAAa,GAAIC,OAAO,IAAK;IACjCnG,YAAY,CAACmG,OAAO,CAACrD,UAAU,CAAC;IAChClD,WAAW,CAAC,EAAE,CAAC;IACfwF,gBAAgB,CAACe,OAAO,CAACrD,UAAU,CAAC;IACpCd,kBAAkB,CAACmE,OAAO,CAACrD,UAAU,CAAC;EACxC,CAAC;;EAED;EACA,MAAMd,kBAAkB,GAAG,MAAOqD,MAAM,IAAK;IAC3C,IAAI;MACF,MAAM9C,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,8BAA8BuD,MAAM,EAAE,CAAC;MAC9E,MAAM5C,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAAC9B,KAAK,EAAE;QACdS,gBAAgB,CAACqB,IAAI,CAAC9B,KAAK,CAAC;MAC9B,CAAC,MAAM;QACLS,gBAAgB,CAAC,EAAE,CAAC;MACtB;IACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDvB,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMgF,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,oCAAoCF,QAAQ,IAAI,CAAC,EAAE;MACrE;IACF;IAEA,IAAI;MACF,MAAM9D,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,cAAc,EAAE;QACrD2B,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBf,UAAU,EAAE/C,SAAS;UACrByG,QAAQ,EAAEH;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAM5D,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACiC,OAAO,EAAE;QAChB;QACA1C,kBAAkB,CAACjC,SAAS,CAAC;QAC7BH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;UACxByD,IAAI,EAAE,yBAAyBiD,QAAQ,IAAI;UAC3ChD,MAAM,EAAE;QACV,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLzD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;UACxByD,IAAI,EAAE,qBAAqBiD,QAAQ,MAAM5D,IAAI,CAACE,KAAK,IAAI,EAAE,EAAE;UAC3DU,MAAM,EAAE,QAAQ;UAChBU,OAAO,EAAE;QACX,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C/C,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QACxByD,IAAI,EAAE,qBAAqBiD,QAAQ,sBAAsB;QACzDhD,MAAM,EAAE,QAAQ;QAChBU,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL;EACF,CAAC;;EAED;EACA,MAAM0C,iBAAiB,GAAIN,OAAO,IAAK;IACrCnF,mBAAmB,CAACmF,OAAO,CAACrD,UAAU,CAAC;IACvC5B,eAAe,CAACiF,OAAO,CAACO,KAAK,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAO5G,SAAS,IAAK;IACrC,IAAI;MACF,MAAMwC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,uBAAuB,EAAE;QAC9D2B,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBf,UAAU,EAAE/C,SAAS;UACrB6G,SAAS,EAAE3F;QACb,CAAC;MACH,CAAC,CAAC;MAEF,MAAMwB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACiC,OAAO,EAAE;QAChB3C,aAAa,CAAC,CAAC,CAAC,CAAC;QACjBf,mBAAmB,CAAC,IAAI,CAAC;QACzBE,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,MAAM;QACL0B,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEF,IAAI,CAACE,KAAK,IAAI,eAAe,CAAC;MACzE;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMkE,aAAa,GAAGA,CAAA,KAAM;IAC1B7F,mBAAmB,CAAC,IAAI,CAAC;IACzBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAM4F,aAAa,GAAG,MAAOC,iBAAiB,IAAK;IACjD,IAAIT,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;MACnE,IAAI;QACF,MAAMhE,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,8BAA8BiF,iBAAiB,EAAE,EAAE;UACxFtD,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,IAAIlB,QAAQ,CAACyE,EAAE,EAAE;UACfjF,aAAa,CAAC,CAAC,CAAC,CAAC;UACjB;UACA,IAAIgF,iBAAiB,KAAKhH,SAAS,EAAE;YACnC8C,kBAAkB,CAAC,CAAC;UACtB;QACF;MACF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EAED,MAAMsE,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI;MACF,MAAMC,IAAI,GAAG,IAAI5D,IAAI,CAAC2D,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,CAAC,GAAG,GAAG,GAAGD,IAAI,CAACE,kBAAkB,CAAC,EAAE,EAAE;QAACC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAC;MAAS,CAAC,CAAC;IAC3G,CAAC,CAAC,MAAM;MACN,OAAO,EAAE;IACX;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAOC,YAAY,IAAK;IAC/C,MAAMC,UAAU,GAAG/H,QAAQ,CAAC8H,YAAY,CAAC;IACzC,IAAI,CAACC,UAAU,IAAIA,UAAU,CAACrE,MAAM,KAAK,KAAK,EAAE;IAEhD,MAAMF,WAAW,GAAGxD,QAAQ,CAAC8H,YAAY,GAAG,CAAC,CAAC;IAC9C,IAAI,CAACtE,WAAW,IAAIA,WAAW,CAACE,MAAM,KAAK,MAAM,EAAE;;IAEnD;IACA,MAAMsE,YAAY,GAAGD,UAAU,CAACE,kBAAkB,IAAI,CAAC;IACvD,IAAID,YAAY,IAAI,CAAC,EAAE;MACrBzD,KAAK,CAAC,0DAA0D,CAAC;MACjE;IACF;IAEA5C,oBAAoB,CAACmG,YAAY,CAAC;IAElC,IAAI;MACF,MAAMlF,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,OAAO,aAAa,EAAE;QACpD2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBf,UAAU,EAAE/C,SAAS;UACrB+D,OAAO,EAAEX,WAAW,CAACC;QACvB,CAAC;MACH,CAAC,CAAC;MAEF,MAAMX,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACF,QAAQ,EAAE;QACjB,MAAMsF,WAAW,GAAG,CAAC,GAAGlI,QAAQ,CAAC;QACjC,MAAMmI,iBAAiB,GAAGD,WAAW,CAACJ,YAAY,CAAC;QAEnD,IAAI,CAACK,iBAAiB,CAACrC,YAAY,EAAE;UACnCqC,iBAAiB,CAACrC,YAAY,GAAG,CAACqC,iBAAiB,CAAC1E,IAAI,CAAC;UACzD0E,iBAAiB,CAACjC,WAAW,GAAG,CAAC;QACnC;QAEAiC,iBAAiB,CAACrC,YAAY,CAACsC,IAAI,CAACtF,IAAI,CAACF,QAAQ,CAAC;QAClDuF,iBAAiB,CAACjC,WAAW,GAAGiC,iBAAiB,CAACrC,YAAY,CAACxD,MAAM,GAAG,CAAC;QACzE6F,iBAAiB,CAAC1E,IAAI,GAAGX,IAAI,CAACF,QAAQ;QACtCuF,iBAAiB,CAACF,kBAAkB,GAAGnF,IAAI,CAACmF,kBAAkB;QAE9DhI,WAAW,CAACiI,WAAW,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOlF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRrB,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAM0G,oBAAoB,GAAGA,CAACP,YAAY,EAAEQ,SAAS,KAAK;IACxD,MAAMJ,WAAW,GAAG,CAAC,GAAGlI,QAAQ,CAAC;IACjC,MAAMmE,OAAO,GAAG+D,WAAW,CAACJ,YAAY,CAAC;IAEzC,IAAI,CAAC3D,OAAO,CAAC2B,YAAY,IAAI3B,OAAO,CAAC2B,YAAY,CAACxD,MAAM,IAAI,CAAC,EAAE;IAE/D,IAAIiG,QAAQ,GAAGpE,OAAO,CAAC+B,WAAW,GAAGoC,SAAS;;IAE9C;IACA,IAAIC,QAAQ,GAAG,CAAC,EAAE;MAChBA,QAAQ,GAAGpE,OAAO,CAAC2B,YAAY,CAACxD,MAAM,GAAG,CAAC;IAC5C,CAAC,MAAM,IAAIiG,QAAQ,IAAIpE,OAAO,CAAC2B,YAAY,CAACxD,MAAM,EAAE;MAClDiG,QAAQ,GAAG,CAAC;IACd;IAEApE,OAAO,CAAC+B,WAAW,GAAGqC,QAAQ;IAC9BpE,OAAO,CAACV,IAAI,GAAGU,OAAO,CAAC2B,YAAY,CAACyC,QAAQ,CAAC;IAE7CtI,WAAW,CAACiI,WAAW,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMM,aAAa,GAAGA,CAACrE,OAAO,EAAEsE,KAAK,KAAK;IACxC,IAAItE,OAAO,CAACT,MAAM,KAAK,KAAK,EAAE;MAC5B,MAAMgF,eAAe,GAAGvE,OAAO,CAAC2B,YAAY,IAAI3B,OAAO,CAAC2B,YAAY,CAACxD,MAAM,GAAG,CAAC;MAC/E,MAAMqG,YAAY,GAAGxE,OAAO,CAAC+B,WAAW,IAAI,CAAC;MAC7C,MAAM0C,iBAAiB,GAAGzE,OAAO,CAAC2B,YAAY,GAAG3B,OAAO,CAAC2B,YAAY,CAACxD,MAAM,GAAG,CAAC;MAChF,MAAMuG,iBAAiB,GAAG1E,OAAO,CAAC8D,kBAAkB,IAAI,CAAC;MACzD,MAAMa,aAAa,GAAGD,iBAAiB,GAAG,CAAC;MAE3C,oBACEjJ,OAAA;QAAKmJ,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCpJ,OAAA;UAAKmJ,SAAS,EAAE,mBAAmB5E,OAAO,CAACC,OAAO,GAAG,OAAO,GAAG,EAAE,EAAG;UAAA4E,QAAA,eAClEpJ,OAAA,CAACF,aAAa;YAAAsJ,QAAA,EAAE7E,OAAO,CAACV;UAAI;YAAAiD,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB;QAAC;UAAAzC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACNvJ,OAAA;UAAKmJ,SAAS,EAAC,sBAAsB;UAAAC,QAAA,GAClCN,eAAe,iBACd9I,OAAA;YAAKmJ,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtCpJ,OAAA;cACEmJ,SAAS,EAAC,SAAS;cACnBK,OAAO,EAAEA,CAAA,KAAMf,oBAAoB,CAACI,KAAK,EAAE,CAAC,CAAC,CAAE;cAC/C1B,KAAK,EAAC,sBAAsB;cAAAiC,QAAA,EAC7B;YAED;cAAAtC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTvJ,OAAA;cAAMmJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,GACnCL,YAAY,GAAG,CAAC,EAAC,KAAG,EAACC,iBAAiB;YAAA;cAAAlC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC,eACPvJ,OAAA;cACEmJ,SAAS,EAAC,SAAS;cACnBK,OAAO,EAAEA,CAAA,KAAMf,oBAAoB,CAACI,KAAK,EAAE,CAAC,CAAE;cAC9C1B,KAAK,EAAC,kBAAkB;cAAAiC,QAAA,EACzB;YAED;cAAAtC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,eACDvJ,OAAA;YAAKmJ,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCpJ,OAAA;cACEmJ,SAAS,EAAC,gBAAgB;cAC1BK,OAAO,EAAEA,CAAA,KAAMvB,gBAAgB,CAACY,KAAK,CAAE;cACvCY,QAAQ,EAAE3H,iBAAiB,KAAK+G,KAAK,IAAI,CAACK,aAAc;cACxD/B,KAAK,EAAE+B,aAAa,GAAG,qBAAqB,GAAG,+BAAgC;cAAAE,QAAA,EAE9EtH,iBAAiB,KAAK+G,KAAK,GAAG,GAAG,GAAG;YAAI;cAAA/B,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC,EACRN,iBAAiB,GAAG,CAAC,iBACpBjJ,OAAA;cAAMmJ,SAAS,EAAC,oBAAoB;cAAAC,QAAA,GACjCH,iBAAiB,EAAC,IACrB;YAAA;cAAAnC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAzC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAzC,QAAA,EAAAuC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV,CAAC,MAAM;MACL,oBACEvJ,OAAA;QAAKmJ,SAAS,EAAE,mBAAmB5E,OAAO,CAACC,OAAO,GAAG,OAAO,GAAG,EAAE,EAAG;QAAA4E,QAAA,EACjE7E,OAAO,CAACV;MAAI;QAAAiD,QAAA,EAAAuC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAEV;EACF,CAAC;EAED,oBACEvJ,OAAA;IAAKmJ,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5BpJ,OAAA;MAAKmJ,SAAS,EAAE,WAAWvI,aAAa,GAAG,MAAM,GAAG,QAAQ,EAAG;MAAAwI,QAAA,gBAC7DpJ,OAAA;QAAQmJ,SAAS,EAAC,cAAc;QAACK,OAAO,EAAElG,kBAAmB;QAAA8F,QAAA,gBAC3DpJ,OAAA;UAAKmJ,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAC;UAAAtC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtCvJ,OAAA;UAAAoJ,QAAA,EAAM;QAAQ;UAAAtC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAzC,QAAA,EAAAuC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACTvJ,OAAA;QAAKmJ,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BpI,QAAQ,CAACiF,GAAG,CAAEW,OAAO,iBACpB5G,OAAA;UAEEmJ,SAAS,EAAE,gBAAgBvC,OAAO,CAACrD,UAAU,KAAK/C,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAA4I,QAAA,EAE7E5H,gBAAgB,KAAKoF,OAAO,CAACrD,UAAU,gBACtCvD,OAAA;YAAKmJ,SAAS,EAAC,cAAc;YAACK,OAAO,EAAG/F,CAAC,IAAKA,CAAC,CAACiG,eAAe,CAAC,CAAE;YAAAN,QAAA,gBAChEpJ,OAAA;cACEqG,IAAI,EAAC,MAAM;cACXsD,KAAK,EAAEjI,YAAa;cACpBkI,QAAQ,EAAGnG,CAAC,IAAK9B,eAAe,CAAC8B,CAAC,CAACiD,MAAM,CAACiD,KAAK,CAAE;cACjDE,SAAS,EAAGpG,CAAC,IAAK;gBAChBA,CAAC,CAACiG,eAAe,CAAC,CAAC;gBACnB,IAAIjG,CAAC,CAACqG,GAAG,KAAK,OAAO,EAAE;kBACrB1C,SAAS,CAACR,OAAO,CAACrD,UAAU,CAAC;gBAC/B,CAAC,MAAM,IAAIE,CAAC,CAACqG,GAAG,KAAK,QAAQ,EAAE;kBAC7BxC,aAAa,CAAC,CAAC;gBACjB;cACF,CAAE;cACFyC,MAAM,EAAEA,CAAA,KAAMzC,aAAa,CAAC,CAAE;cAC9B6B,SAAS,EAAC,qBAAqB;cAC/Ba,SAAS;YAAA;cAAAlD,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACFvJ,OAAA;cAAKmJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCpJ,OAAA;gBACEwJ,OAAO,EAAG/F,CAAC,IAAK;kBACdA,CAAC,CAACiG,eAAe,CAAC,CAAC;kBACnBtC,SAAS,CAACR,OAAO,CAACrD,UAAU,CAAC;gBAC/B,CAAE;gBAAA6F,QAAA,EACH;cAED;gBAAAtC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTvJ,OAAA;gBACEwJ,OAAO,EAAG/F,CAAC,IAAK;kBACdA,CAAC,CAACiG,eAAe,CAAC,CAAC;kBACnBpC,aAAa,CAAC,CAAC;gBACjB,CAAE;gBAAA8B,QAAA,EACH;cAED;gBAAAtC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAENvJ,OAAA;YACEmJ,SAAS,EAAC,iBAAiB;YAC3BK,OAAO,EAAEA,CAAA,KAAM7C,aAAa,CAACC,OAAO,CAAE;YAAAwC,QAAA,gBAEtCpJ,OAAA;cAAKmJ,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAtC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtCvJ,OAAA;cAAKmJ,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BpJ,OAAA;gBAAKmJ,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAExC,OAAO,CAACO;cAAK;gBAAAL,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACpDvJ,OAAA;gBAAKmJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAE1B,UAAU,CAACd,OAAO,CAACqD,YAAY;cAAC;gBAAAnD,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC,eACNvJ,OAAA;cAAKmJ,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9BpJ,OAAA;gBACEmJ,SAAS,EAAC,6BAA6B;gBACvCK,OAAO,EAAG/F,CAAC,IAAK;kBACdA,CAAC,CAACiG,eAAe,CAAC,CAAC;kBACnBxC,iBAAiB,CAACN,OAAO,CAAC;gBAC5B,CAAE;gBAAAwC,QAAA,EACH;cAED;gBAAAtC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTvJ,OAAA;gBACEmJ,SAAS,EAAC,+BAA+B;gBACzCK,OAAO,EAAG/F,CAAC,IAAK;kBACdA,CAAC,CAACiG,eAAe,CAAC,CAAC;kBACnBnC,aAAa,CAACX,OAAO,CAACrD,UAAU,CAAC;gBACnC,CAAE;gBAAA6F,QAAA,EACH;cAED;gBAAAtC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QACN,GAvEI3C,OAAO,CAACrD,UAAU;UAAAuD,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwEpB,CACN;MAAC;QAAAzC,QAAA,EAAAuC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAzC,QAAA,EAAAuC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNvJ,OAAA;MAAKmJ,SAAS,EAAE,gBAAgBvI,aAAa,GAAG,EAAE,GAAG,gBAAgB,EAAG;MAAAwI,QAAA,gBACtEpJ,OAAA;QAAKmJ,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpJ,OAAA;UACEmJ,SAAS,EAAC,gBAAgB;UAC1BK,OAAO,EAAEA,CAAA,KAAM3I,gBAAgB,CAAC,CAACD,aAAa,CAAE;UAAAwI,QAAA,eAEhDpJ,OAAA;YAAKmJ,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BpJ,OAAA;cAAA8G,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbvJ,OAAA;cAAA8G,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbvJ,OAAA;cAAA8G,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAzC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACTvJ,OAAA;UAAMmJ,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC7B,EAAAjJ,cAAA,GAAAa,QAAQ,CAACkJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC5G,UAAU,KAAK/C,SAAS,CAAC,cAAAL,cAAA,uBAA9CA,cAAA,CAAgDgH,KAAK,KAAI;QAAU;UAAAL,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC;MAAA;QAAAzC,QAAA,EAAAuC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENvJ,OAAA;QAAKmJ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BpJ,OAAA;UAAKmJ,SAAS,EAAC,oBAAoB;UAAAC,QAAA,GAChChJ,QAAQ,CAACsC,MAAM,KAAK,CAAC,iBACpB1C,OAAA;YAAKmJ,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BpJ,OAAA;cAAKmJ,SAAS,EAAC,aAAa;cAAAC,QAAA,eAC1BpJ,OAAA;gBAAKoK,GAAG,EAAC,mBAAmB;gBAACC,GAAG,EAAC,WAAW;gBAAClB,SAAS,EAAC;cAAU;gBAAArC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CAAC,eACNvJ,OAAA;cAAAoJ,QAAA,EAAG;YAA+B;cAAAtC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CACN,EAEAnJ,QAAQ,CAAC6F,GAAG,CAAC,CAAC1B,OAAO,EAAEsE,KAAK,kBAC3B7I,OAAA;YAAiBmJ,SAAS,EAAE,WAAW5E,OAAO,CAACT,MAAM,EAAG;YAAAsF,QAAA,gBACtDpJ,OAAA;cAAKmJ,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC5B7E,OAAO,CAACT,MAAM,KAAK,MAAM,GAAG,IAAI,GAAG;YAAI;cAAAgD,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACNvJ,OAAA;cAAKmJ,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EACvCR,aAAa,CAACrE,OAAO,EAAEsE,KAAK;YAAC;cAAA/B,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA,GANEV,KAAK;YAAA/B,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOV,CACN,CAAC,EAED7I,SAAS,iBACRV,OAAA;YAAKmJ,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpJ,OAAA;cAAKmJ,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAC;YAAE;cAAAtC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxCvJ,OAAA;cAAKmJ,SAAS,EAAC,2BAA2B;cAAAC,QAAA,eACxCpJ,OAAA;gBAAKmJ,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,eACtCpJ,OAAA;kBAAKmJ,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BpJ,OAAA;oBAAA8G,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACbvJ,OAAA;oBAAA8G,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACbvJ,OAAA;oBAAA8G,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAzC,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAzC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eACDvJ,OAAA;YAAKsK,GAAG,EAAEhI;UAAW;YAAAwE,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAzC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,EAGLzI,cAAc,iBACbd,OAAA;UAAKmJ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BpJ,OAAA;YAAKmJ,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCpJ,OAAA;cAAKmJ,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9BpJ,OAAA;gBAAAoJ,QAAA,EAAI;cAAY;gBAAAtC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBvJ,OAAA;gBACEmJ,SAAS,EAAC,WAAW;gBACrBK,OAAO,EAAEA,CAAA,KAAMzI,iBAAiB,CAAC,KAAK,CAAE;gBAAAqI,QAAA,EACzC;cAED;gBAAAtC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAGNvJ,OAAA;cAAKmJ,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACrCpJ,OAAA;gBAAAoJ,QAAA,GAAI,kBAAgB,EAACxH,aAAa,CAACc,MAAM,EAAC,GAAC;cAAA;gBAAAoE,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChDvJ,OAAA;gBAAKmJ,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EACjCxH,aAAa,CAACc,MAAM,GAAG,CAAC,GACvBd,aAAa,CAACqE,GAAG,CAAC,CAACsE,IAAI,EAAE1B,KAAK,kBAC5B7I,OAAA;kBAAiBmJ,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,gBAC7CpJ,OAAA;oBAAMmJ,SAAS,EAAC,WAAW;oBAAAC,QAAA,EACxBmB,IAAI,CAACrF,MAAM,KAAK,eAAe,GAAG,IAAI,GAAG;kBAAI;oBAAA4B,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1C,CAAC,eACPvJ,OAAA;oBAAMmJ,SAAS,EAAC,WAAW;oBAAAC,QAAA,EAAEmB,IAAI,CAACtF;kBAAI;oBAAA6B,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAC9CvJ,OAAA;oBAAMmJ,SAAS,EAAC,aAAa;oBAAAC,QAAA,EAC1BmB,IAAI,CAACrF,MAAM,KAAK,eAAe,GAAG,iBAAiB,GAAG;kBAAE;oBAAA4B,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrD,CAAC,eACPvJ,OAAA;oBACEmJ,SAAS,EAAC,iBAAiB;oBAC3BK,OAAO,EAAEA,CAAA,KAAM3C,gBAAgB,CAAC0D,IAAI,CAACtF,IAAI,CAAE;oBAC3CkC,KAAK,EAAC,aAAa;oBAAAiC,QAAA,EACpB;kBAED;oBAAAtC,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,GAdDV,KAAK;kBAAA/B,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAeV,CACN,CAAC,gBAEFvJ,OAAA;kBAAKmJ,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BpJ,OAAA;oBAAMmJ,SAAS,EAAC,YAAY;oBAAAC,QAAA,EAAC;kBAAE;oBAAAtC,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,yBAExC;gBAAA;kBAAAzC,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cACN;gBAAAzC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAGNvJ,OAAA;cAAKmJ,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjCpJ,OAAA;gBAAAoJ,QAAA,EAAI;cAAgB;gBAAAtC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzBvJ,OAAA;gBAAMwK,QAAQ,EAAE9F,iBAAkB;gBAACyE,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBACxDpJ,OAAA;kBAAOmJ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC/BpJ,OAAA;oBACEqG,IAAI,EAAC,MAAM;oBACXoE,QAAQ;oBACRb,QAAQ,EAAErD,gBAAiB;oBAC3B4C,SAAS,EAAC;kBAAY;oBAAArC,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvB,CAAC,eACFvJ,OAAA;oBAAKmJ,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,gBAChCpJ,OAAA;sBAAKmJ,SAAS,EAAC,aAAa;sBAAAC,QAAA,EAAC;oBAAE;sBAAAtC,QAAA,EAAAuC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACrCvJ,OAAA;sBAAAoJ,QAAA,EAAG;oBAAkC;sBAAAtC,QAAA,EAAAuC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC,eACzCvJ,OAAA;sBAAGmJ,SAAS,EAAC,YAAY;sBAAAC,QAAA,EAAC;oBAAuB;sBAAAtC,QAAA,EAAAuC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAG,CAAC;kBAAA;oBAAAzC,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClD,CAAC;gBAAA;kBAAAzC,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eACRvJ,OAAA;kBAAKmJ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAC5B5C,KAAK,CAACC,IAAI,CAACnF,aAAa,CAAC,CAAC2E,GAAG,CAAC,CAACsE,IAAI,EAAE1B,KAAK,kBACzC7I,OAAA;oBAAiBmJ,SAAS,EAAC,eAAe;oBAAAC,QAAA,gBACxCpJ,OAAA;sBAAMmJ,SAAS,EAAC,WAAW;sBAAAC,QAAA,EAAC;oBAAE;sBAAAtC,QAAA,EAAAuC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACrCvJ,OAAA;sBAAAoJ,QAAA,EAAOmB,IAAI,CAACtF;oBAAI;sBAAA6B,QAAA,EAAAuC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,eACxBvJ,OAAA;sBACEqG,IAAI,EAAC,QAAQ;sBACbmD,OAAO,EAAEA,CAAA,KAAM;wBACb,MAAMkB,QAAQ,GAAGlE,KAAK,CAACC,IAAI,CAACnF,aAAa,CAAC,CAACqJ,MAAM,CAAC,CAACC,CAAC,EAAE7F,CAAC,KAAKA,CAAC,KAAK8D,KAAK,CAAC;wBACxEtH,gBAAgB,CAACmJ,QAAQ,CAAC;sBAC5B,CAAE;sBACFvB,SAAS,EAAC,qBAAqB;sBAAAC,QAAA,EAChC;oBAED;sBAAAtC,QAAA,EAAAuC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA,GAZDV,KAAK;oBAAA/B,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAaV,CACN;gBAAC;kBAAAzC,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACNvJ,OAAA;kBAAKmJ,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/BpJ,OAAA;oBAAQqG,IAAI,EAAC,QAAQ;oBAAC8C,SAAS,EAAC,YAAY;oBAACK,OAAO,EAAEA,CAAA,KAAMzI,iBAAiB,CAAC,KAAK,CAAE;oBAAAqI,QAAA,EAAC;kBAEtF;oBAAAtC,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTvJ,OAAA;oBAAQqG,IAAI,EAAC,QAAQ;oBAAC8C,SAAS,EAAC,mBAAmB;oBAACM,QAAQ,EAAEnI,aAAa,CAACoB,MAAM,KAAK,CAAC,IAAIV,WAAY;oBAAAoH,QAAA,EACrGpH,WAAW,GAAG,cAAc,GAAG,WAAWV,aAAa,CAACoB,MAAM;kBAAG;oBAAAoE,QAAA,EAAAuC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5D,CAAC;gBAAA;kBAAAzC,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAzC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAzC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAGDvJ,OAAA;UACEmJ,SAAS,EAAC,iBAAiB;UAC3B0B,YAAY,EAAEA,CAAA,KAAM3I,eAAe,IAAIG,iBAAiB,CAAC,IAAI,CAAE;UAC/DyI,YAAY,EAAEA,CAAA,KAAMzI,iBAAiB,CAAC,KAAK,CAAE;UAAA+G,QAAA,gBAE7CpJ,OAAA;YAAMwK,QAAQ,EAAEhH,iBAAkB;YAAC2F,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvDpJ,OAAA;cACEmJ,SAAS,EAAC,YAAY;cACtBK,OAAO,EAAEA,CAAA,KAAMzI,iBAAiB,CAAC,IAAI,CAAE;cACvCsF,IAAI,EAAC,QAAQ;cAAA+C,QAAA,eAEbpJ,OAAA;gBAAK+K,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,MAAM;gBAAA9B,QAAA,gBACzDpJ,OAAA;kBAAMmL,CAAC,EAAC,eAAe;kBAACC,MAAM,EAAC,cAAc;kBAACC,WAAW,EAAC,GAAG;kBAACC,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC;gBAAO;kBAAAzE,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC,eAC5GvJ,OAAA;kBAAMmL,CAAC,EAAC,aAAa;kBAACC,MAAM,EAAC,cAAc;kBAACC,WAAW,EAAC,GAAG;kBAACC,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC;gBAAO;kBAAAzE,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC,eAC1GvJ,OAAA;kBAAMmL,CAAC,EAAC,+DAA+D;kBAACC,MAAM,EAAC,cAAc;kBAACC,WAAW,EAAC,GAAG;kBAACC,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC;gBAAO;kBAAAzE,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC,eAC5JvJ,OAAA;kBAAMmL,CAAC,EAAC,oCAAoC;kBAACC,MAAM,EAAC,cAAc;kBAACC,WAAW,EAAC,GAAG;kBAACC,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC;gBAAO;kBAAAzE,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC;cAAA;gBAAAzC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9H;YAAC;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eAETvJ,OAAA;cACEqG,IAAI,EAAC,MAAM;cACXsD,KAAK,EAAErJ,KAAM;cACbsJ,QAAQ,EAAGnG,CAAC,IAAKlD,QAAQ,CAACkD,CAAC,CAACiD,MAAM,CAACiD,KAAK,CAAE;cAC1C6B,WAAW,EAAEtJ,eAAe,GAAG,kCAAkC,GAAG,qCAAsC;cAC1GuH,QAAQ,EAAEvH,eAAe,IAAIxB,SAAU;cACvCyI,SAAS,EAAE,iBAAiBjH,eAAe,GAAG,UAAU,GAAG,EAAE;YAAG;cAAA4E,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CAAC,eACFvJ,OAAA;cACEqG,IAAI,EAAC,QAAQ;cACboD,QAAQ,EAAEvH,eAAe,IAAI,CAAC5B,KAAK,CAACqD,IAAI,CAAC,CAAC,IAAIjD,SAAU;cACxDyI,SAAS,EAAC,UAAU;cAAAC,QAAA,eAEpBpJ,OAAA;gBAAK+K,KAAK,EAAC,IAAI;gBAACC,MAAM,EAAC,IAAI;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,MAAM;gBAAA9B,QAAA,gBACzDpJ,OAAA;kBAAMmL,CAAC,EAAC,aAAa;kBAACC,MAAM,EAAC,cAAc;kBAACC,WAAW,EAAC,GAAG;kBAACC,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC;gBAAO;kBAAAzE,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC,eAC1GvJ,OAAA;kBAAMmL,CAAC,EAAC,6BAA6B;kBAACC,MAAM,EAAC,cAAc;kBAACC,WAAW,EAAC,GAAG;kBAACC,aAAa,EAAC,OAAO;kBAACC,cAAc,EAAC;gBAAO;kBAAAzE,QAAA,EAAAuC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAC,CAAC;cAAA;gBAAAzC,QAAA,EAAAuC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvH;YAAC;cAAAzC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACPvJ,OAAA;YAAKmJ,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BpJ,OAAA;cAAAoJ,QAAA,EAAG;YAAyD;cAAAtC,QAAA,EAAAuC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAzC,QAAA,EAAAuC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC;QAAA;UAAAzC,QAAA,EAAAuC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAzC,QAAA,EAAAuC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAzC,QAAA,EAAAuC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAzC,QAAA,EAAAuC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrJ,EAAA,CA7xBQD,GAAG;AAAAwL,EAAA,GAAHxL,GAAG;AA+xBZ,eAAeA,GAAG;AAAC,IAAAwL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}