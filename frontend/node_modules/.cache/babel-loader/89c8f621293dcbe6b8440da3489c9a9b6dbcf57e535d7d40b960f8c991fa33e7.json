{"ast":null,"code":"var _jsxFileName = \"/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _sessions$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      // Refresh sessions list after creating new session\n      setTimeout(fetchSessions, 500);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Check if files have been uploaded for this session\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setMessages([...messages, userMessage, {\n          text: data.error,\n          sender: 'bot',\n          isError: true\n        }]);\n      } else if (data.response) {\n        // Now storing the response as is, without pre-processing\n        setMessages([...messages, userMessage, {\n          text: data.response,\n          sender: 'bot'\n        }]);\n        // Refresh sessions to update titles if this was the first message\n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, {\n        text: 'An error occurred. Please try again later.',\n        sender: 'bot',\n        isError: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleUploadFiles = async e => {\n    e.preventDefault();\n    if (selectedFiles.length === 0) return;\n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFiles([...files, ...selectedFiles]);\n        setSelectedFiles([]);\n        setIsUploaderOpen(false);\n        setMessages([...messages, {\n          text: `Successfully uploaded ${selectedFiles.length} file(s).`,\n          sender: 'system'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, {\n        text: 'Failed to upload files. Please try again.',\n        sender: 'system',\n        isError: true\n      }]);\n    }\n  };\n  const fetchChatHistory = async sessId => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      if (data.history) {\n        // Convert the API response to our message format\n        const formattedMessages = [];\n        for (let i = 0; i < data.history.length; i += 2) {\n          if (i + 1 < data.history.length) {\n            formattedMessages.push({\n              text: data.history[i].content,\n              sender: 'user'\n            });\n            formattedMessages.push({\n              text: data.history[i + 1].content,\n              sender: 'bot'\n            });\n          }\n        }\n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFileSelect = e => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n  const switchSession = session => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n  };\n  const startEditingTitle = (session, e) => {\n    e.stopPropagation(); // Prevent switching to the session\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n  const saveTitle = async (sessionId, e) => {\n    if (e) e.stopPropagation();\n    try {\n      const response = await fetch(`${API_URL}/update_session_title?session_id=${sessionId}&new_title=${encodeURIComponent(editingTitle)}`, {\n        method: 'PUT'\n      });\n      if (response.ok) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n  const cancelEditing = e => {\n    if (e) e.stopPropagation();\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n  const deleteSession = async (sessionIdToDelete, e) => {\n    e.stopPropagation(); // Prevent switching to the session\n\n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch {\n      return '';\n    }\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = message => {\n    if (message.sender === 'bot') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-content ${message.isError ? 'error' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-content ${message.isError ? 'error' : ''}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        onClick: generateNewSession,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-list\",\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `session-item ${session.session_id === sessionId ? 'active' : ''}`,\n          onClick: () => switchSession(session),\n          children: editingSessionId === session.session_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-edit\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingTitle,\n              onChange: e => setEditingTitle(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') {\n                  saveTitle(session.session_id, e);\n                } else if (e.key === 'Escape') {\n                  cancelEditing(e);\n                }\n              },\n              className: \"session-title-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-edit-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => saveTitle(session.session_id, e),\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEditing,\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"session-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-title\",\n              children: session.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-date\",\n              children: formatDate(session.last_updated)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn edit-btn\",\n                onClick: e => startEditingTitle(session, e),\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"session-action-btn delete-btn\",\n                onClick: e => deleteSession(session.session_id, e),\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this)\n        }, session.session_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle\",\n          onClick: () => setIsSidebarOpen(!isSidebarOpen),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"session-id\",\n          children: ((_sessions$find = sessions.find(s => s.session_id === sessionId)) === null || _sessions$find === void 0 ? void 0 : _sessions$find.title) || `Session: ${(sessionId === null || sessionId === void 0 ? void 0 : sessionId.substring(0, 8)) || 'Loading'}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender}`,\n            children: renderMessage(message)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content loading\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), isUploaderOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploader-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploader-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUploadFiles,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                multiple: true,\n                onChange: handleFileSelect,\n                className: \"file-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-files\",\n                children: Array.from(selectedFiles).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-file\",\n                  children: file.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploader-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setIsUploaderOpen(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: selectedFiles.length === 0,\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-btn\",\n            onClick: () => setIsUploaderOpen(true),\n            children: \"\\uD83D\\uDCCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"input-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: \"Type your message...\",\n              disabled: isLoading,\n              className: \"message-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !input.trim() || isLoading,\n              className: \"send-btn\",\n              children: \"\\u21B5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d3o5sVkvsf+MTZQNjlwa2kTI8sM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","_sessions$find","messages","setMessages","input","setInput","sessionId","setSessionId","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","isUploaderOpen","setIsUploaderOpen","sessions","setSessions","files","setFiles","selectedFiles","setSelectedFiles","editingSessionId","setEditingSessionId","editingTitle","setEditingTitle","chatEndRef","API_URL","fetchSessions","generateNewSession","scrollToBottom","_chatEndRef$current","current","scrollIntoView","behavior","response","fetch","data","json","error","console","session_id","setTimeout","handleSendMessage","e","preventDefault","trim","userMessage","text","sender","method","headers","body","JSON","stringify","message","isError","length","handleUploadFiles","formData","FormData","append","i","success","fetchChatHistory","sessId","history","formattedMessages","push","content","handleFileSelect","Array","from","target","switchSession","session","startEditingTitle","stopPropagation","title","saveTitle","encodeURIComponent","ok","cancelEditing","deleteSession","sessionIdToDelete","window","confirm","formatDate","dateString","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","renderMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","value","onChange","onKeyDown","key","autoFocus","last_updated","find","s","substring","index","ref","onSubmit","multiple","file","name","disabled","placeholder","_c","$RefreshReg$"],"sources":["/home/sujalnath/dev/projects/rag-chatbot/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isUploaderOpen, setIsUploaderOpen] = useState(false);\n  const [sessions, setSessions] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [editingSessionId, setEditingSessionId] = useState(null);\n  const [editingTitle, setEditingTitle] = useState('');\n  const chatEndRef = useRef(null);\n  const API_URL = 'http://localhost:8000'; // Update this to your API URL\n\n  // Generate a new session on first load\n  useEffect(() => {\n    fetchSessions();\n    generateNewSession();\n  }, []);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(`${API_URL}/sessions`);\n      const data = await response.json();\n      setSessions(data.sessions || []);\n    } catch (error) {\n      console.error('Error fetching sessions:', error);\n    }\n  };\n\n  const generateNewSession = async () => {\n    try {\n      const response = await fetch(`${API_URL}/generate_session`);\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setMessages([]);\n      // Refresh sessions list after creating new session\n      setTimeout(fetchSessions, 500);\n    } catch (error) {\n      console.error('Error generating session:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!input.trim()) return;\n    \n    // Check if files have been uploaded for this session\n    const userMessage = { text: input, sender: 'user' };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`${API_URL}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: input,\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (data.error) {\n        setMessages([...messages, userMessage, { text: data.error, sender: 'bot', isError: true }]);\n      } else if (data.response) {\n        // Now storing the response as is, without pre-processing\n        setMessages([...messages, userMessage, { text: data.response, sender: 'bot' }]);\n        // Refresh sessions to update titles if this was the first message\n        if (messages.length === 0) {\n          setTimeout(fetchSessions, 500);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages([...messages, userMessage, { \n        text: 'An error occurred. Please try again later.', \n        sender: 'bot', \n        isError: true \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUploadFiles = async (e) => {\n    e.preventDefault();\n    \n    if (selectedFiles.length === 0) return;\n    \n    const formData = new FormData();\n    formData.append('session_id', sessionId);\n    \n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append('files', selectedFiles[i]);\n    }\n    \n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setFiles([...files, ...selectedFiles]);\n        setSelectedFiles([]);\n        setIsUploaderOpen(false);\n        setMessages([...messages, { \n          text: `Successfully uploaded ${selectedFiles.length} file(s).`, \n          sender: 'system' \n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setMessages([...messages, { \n        text: 'Failed to upload files. Please try again.', \n        sender: 'system', \n        isError: true \n      }]);\n    }\n  };\n\n  const fetchChatHistory = async (sessId) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_URL}/chat_history?session_id=${sessId}`);\n      const data = await response.json();\n      \n      if (data.history) {\n        // Convert the API response to our message format\n        const formattedMessages = [];\n        for (let i = 0; i < data.history.length; i += 2) {\n          if (i + 1 < data.history.length) {\n            formattedMessages.push({ \n              text: data.history[i].content, \n              sender: 'user' \n            });\n            formattedMessages.push({ \n              text: data.history[i + 1].content, \n              sender: 'bot' \n            });\n          }\n        }\n        \n        setMessages(formattedMessages);\n      } else {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n      setMessages([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileSelect = (e) => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n\n  const switchSession = (session) => {\n    setSessionId(session.session_id);\n    setMessages([]);\n    fetchChatHistory(session.session_id);\n  };\n\n  const startEditingTitle = (session, e) => {\n    e.stopPropagation(); // Prevent switching to the session\n    setEditingSessionId(session.session_id);\n    setEditingTitle(session.title);\n  };\n\n  const saveTitle = async (sessionId, e) => {\n    if (e) e.stopPropagation();\n    \n    try {\n      const response = await fetch(`${API_URL}/update_session_title?session_id=${sessionId}&new_title=${encodeURIComponent(editingTitle)}`, {\n        method: 'PUT',\n      });\n      \n      if (response.ok) {\n        fetchSessions(); // Refresh the sessions list\n        setEditingSessionId(null);\n        setEditingTitle('');\n      }\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n\n  const cancelEditing = (e) => {\n    if (e) e.stopPropagation();\n    setEditingSessionId(null);\n    setEditingTitle('');\n  };\n\n  const deleteSession = async (sessionIdToDelete, e) => {\n    e.stopPropagation(); // Prevent switching to the session\n    \n    if (window.confirm('Are you sure you want to delete this session?')) {\n      try {\n        const response = await fetch(`${API_URL}/delete_session?session_id=${sessionIdToDelete}`, {\n          method: 'DELETE',\n        });\n        \n        if (response.ok) {\n          fetchSessions(); // Refresh the sessions list\n          // If the deleted session was the current one, create a new session\n          if (sessionIdToDelete === sessionId) {\n            generateNewSession();\n          }\n        }\n      } catch (error) {\n        console.error('Error deleting session:', error);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n    } catch {\n      return '';\n    }\n  };\n\n  // Function to render message content with Markdown if it's from the bot\n  const renderMessage = (message) => {\n    if (message.sender === 'bot') {\n      return (\n        <div className={`message-content ${message.isError ? 'error' : ''}`}>\n          <ReactMarkdown>{message.text}</ReactMarkdown>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`message-content ${message.isError ? 'error' : ''}`}>\n          {message.text}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {/* Sidebar */}\n      <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n        <button className=\"new-chat-btn\" onClick={generateNewSession}>\n          New Chat\n        </button>\n        <div className=\"sessions-list\">\n          {sessions.map((session) => (\n            <div \n              key={session.session_id} \n              className={`session-item ${session.session_id === sessionId ? 'active' : ''}`}\n              onClick={() => switchSession(session)}\n            >\n              {editingSessionId === session.session_id ? (\n                <div className=\"session-edit\" onClick={(e) => e.stopPropagation()}>\n                  <input\n                    type=\"text\"\n                    value={editingTitle}\n                    onChange={(e) => setEditingTitle(e.target.value)}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        saveTitle(session.session_id, e);\n                      } else if (e.key === 'Escape') {\n                        cancelEditing(e);\n                      }\n                    }}\n                    className=\"session-title-input\"\n                    autoFocus\n                  />\n                  <div className=\"session-edit-buttons\">\n                    <button onClick={(e) => saveTitle(session.session_id, e)}>✓</button>\n                    <button onClick={cancelEditing}>✕</button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"session-content\">\n                  <div className=\"session-title\">{session.title}</div>\n                  <div className=\"session-date\">{formatDate(session.last_updated)}</div>\n                  <div className=\"session-actions\">\n                    <button \n                      className=\"session-action-btn edit-btn\"\n                      onClick={(e) => startEditingTitle(session, e)}\n                    >\n                      ✏️\n                    </button>\n                    <button \n                      className=\"session-action-btn delete-btn\"\n                      onClick={(e) => deleteSession(session.session_id, e)}\n                    >\n                      🗑️\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className={`main-content ${isSidebarOpen ? '' : 'sidebar-closed'}`}>\n        <div className=\"chat-header\">\n          <button \n            className=\"sidebar-toggle\" \n            onClick={() => setIsSidebarOpen(!isSidebarOpen)}\n          >\n            ☰\n          </button>\n          <span className=\"session-id\">\n            {sessions.find(s => s.session_id === sessionId)?.title || `Session: ${sessionId?.substring(0, 8) || 'Loading'}...`}\n          </span>\n        </div>\n\n        <div className=\"chat-container\">\n          <div className=\"messages-container\">\n            {messages.map((message, index) => (\n              <div key={index} className={`message ${message.sender}`}>\n                {renderMessage(message)}\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"message bot\">\n                <div className=\"message-content loading\">\n                  <div className=\"typing-indicator\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={chatEndRef} />\n          </div>\n\n          {/* File Uploader Dialog */}\n          {isUploaderOpen && (\n            <div className=\"uploader-overlay\">\n              <div className=\"uploader-container\">\n                <h3>Upload Files</h3>\n                <form onSubmit={handleUploadFiles}>\n                  <input \n                    type=\"file\" \n                    multiple \n                    onChange={handleFileSelect} \n                    className=\"file-input\"\n                  />\n                  <div className=\"selected-files\">\n                    {Array.from(selectedFiles).map((file, index) => (\n                      <div key={index} className=\"selected-file\">\n                        {file.name}\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"uploader-actions\">\n                    <button type=\"button\" onClick={() => setIsUploaderOpen(false)}>\n                      Cancel\n                    </button>\n                    <button type=\"submit\" disabled={selectedFiles.length === 0}>\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n\n          {/* Input Area */}\n          <div className=\"input-container\">\n            <button \n              className=\"upload-btn\" \n              onClick={() => setIsUploaderOpen(true)}\n            >\n              📎\n            </button>\n            <form onSubmit={handleSendMessage} className=\"input-form\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type your message...\"\n                disabled={isLoading}\n                className=\"message-input\"\n              />\n              <button \n                type=\"submit\" \n                disabled={!input.trim() || isLoading}\n                className=\"send-btn\"\n              >\n                ↵\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}